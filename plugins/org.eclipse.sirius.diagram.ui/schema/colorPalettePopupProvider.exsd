<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.sirius.diagram.ui" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appInfo>
         <meta.schema plugin="org.eclipse.sirius.diagram.ui" id="colorPalettePopupProvider" name="%extension-point.colorPalettePopupProvider.name"/>
      </appInfo>
      <documentation>
         This extension allows to provide a custom color palette popup by registering a color palette popup provider.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element />
         </appInfo>
      </annotation>
      <complexType>
         <sequence>
            <element ref="colorPalettePopupProvider" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="colorPalettePopupProvider">
      <annotation>
         <documentation>
            This element defines new Color Palette Popup Provider.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="providerClass" type="string" use="required">
            <annotation>
               <documentation>
                  The provider implementation.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":org.eclipse.sirius.diagram.ui.tools.api.color.ColorPalettePopupProvider"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  The identifier of the provider instance
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         7.4.3
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         The following is an example of a color palette popup provider:
&lt;p&gt;
&lt;pre&gt;
   &lt;extension
         point=&quot;org.eclipse.sirius.diagram.ui.colorPalettePopupProvider&quot;&gt;
      &lt;colorPalettePopupProvider
             id=&quot;viewpoint.sample.customizedColorPalettePopupProvider&quot;
             providerClass=&quot;org.eclipse.sirius.sample.CustomizedColorPalettePopupProvider&quot;&gt;
      &lt;/colorPalettePopupProvider&gt;
   &lt;/extension&gt;
&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;
Here is the sample provider implementation :
&lt;pre&gt;
package org.eclipse.sirius.sample.analysis;

import java.util.List;

import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
import org.eclipse.sirius.business.api.session.Session;
import org.eclipse.sirius.diagram.ui.tools.api.color.ColorPalettePopupProvider;
import org.eclipse.sirius.diagram.ui.tools.api.color.IColorPalettePopup;
import org.eclipse.swt.widgets.Shell;

/**
 * Simple implementation.
 */
public class CustomizedColorPalettePopupProvider implements ColorPalettePopupProvider {

    public CustomizedColorPalettePopupProvider() {
    }

    @Override
    public boolean provides(Session session) {
        return true;
    }

    @Override
    public IColorPalettePopup getColorPalettePopup(Shell parent, Session session, List&lt;IGraphicalEditPart&gt; editParts, String propertyId) {
        return new CustomizedColorPalettePopup(parent, session, editParts, propertyId);
    }

    @Override
    public int getPriority() {
        return 1;
    }

}

&lt;/pre&gt;
&lt;/p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiinfo"/>
      </appInfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Copyright (c) 2024 Obeo&lt;br&gt;

 This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
&lt;a href=&quot;https://www.eclipse.org/legal/epl-2.0&quot;&gt;https://www.eclipse.org/legal/epl-v20.html&lt;/a&gt;/

SPDX-License-Identifier: EPL-2.0
      </documentation>
   </annotation>

</schema>
