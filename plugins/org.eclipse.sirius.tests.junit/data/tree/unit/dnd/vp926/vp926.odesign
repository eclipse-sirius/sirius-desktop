<?xml version="1.0" encoding="ASCII"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/tree/description/1.0.0" xmlns:tool="http://www.eclipse.org/sirius/description/tool/1.1.0" name="VP926" version="10.0.0.201505222000">
  <ownedViewpoints name="V926">
    <ownedRepresentations xsi:type="description_1:TreeDescription" name="Tree With DnD" domainClass="Company">
      <metamodel href="vp926.ecore#/"/>
      <subItemMappings name="RichDepartment" domainClass="RichDepartment" semanticCandidatesExpression="aql:self.eAllContents()->filter(employee::RichDepartment)">
        <defaultStyle>
          <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_green']"/>
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
        </defaultStyle>
        <subItemMappings name="Rich Employee" domainClass="Employee" semanticCandidatesExpression="aql:self.eAllContents()->filter(employee::Employee)">
          <defaultStyle>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </defaultStyle>
          <directEdit mapping="//@ownedViewpoints[name='V926']/@ownedRepresentations[name='Tree%20With%20DnD']/@subItemMappings[name='RichDepartment']/@subItemMappings[name='Rich%20Employee']">
            <firstModelOperation xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'_COPY' + arg0"/>
            <mask mask="{0}"/>
            <element name="element"/>
            <root name="root"/>
          </directEdit>
          <dropTools name="Drag" precondition="aql:element.oclIsKindOf(employee::Employee)  and  oldContainer.eContainer().oclIsKindOf(employee::RichDepartment)" forceRefresh="true">
            <firstModelOperation xsi:type="tool:ChangeContext" browseExpression="var:element">
              <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:newContainer.name"/>
            </firstModelOperation>
            <oldContainer name="oldContainer"/>
            <newContainer name="newContainer"/>
            <element name="element"/>
            <newViewContainer name="newViewContainer"/>
            <precedingSiblings name="precedingSiblings" documentation="The list of all the preceding siblings in a Drag and Drop operation"/>
          </dropTools>
        </subItemMappings>
        <dropTools name="From Poor To Rich Department" precondition="aql:element.oclIsKindOf(employee::Employee)  and  element.eContainer().oclIsKindOf(employee::PoorDepartment)" forceRefresh="true" dragSource="PROJECT_EXPLORER">
          <firstModelOperation xsi:type="tool:ChangeContext" browseExpression="var:element">
            <subModelOperations xsi:type="tool:MoveElement" newContainerExpression="var:newContainer" featureName="employees"/>
            <subModelOperations xsi:type="tool:SetValue" featureName="wage" valueExpression="aql:self.wage * 2 "/>
          </firstModelOperation>
          <oldContainer name="oldContainer"/>
          <newContainer name="newContainer"/>
          <element name="element"/>
          <newViewContainer name="newViewContainer"/>
          <precedingSiblings name="precedingSiblings" documentation="The list of all the preceding siblings in a Drag and Drop operation"/>
        </dropTools>
        <dropTools name="From Rich To Rich Department" precondition="aql:self.oclIsKindOf(employee::Employee)  and  self.eContainer().oclIsKindOf(employee::RichDepartment)" forceRefresh="true" dragSource="BOTH">
          <firstModelOperation xsi:type="tool:ChangeContext" browseExpression="var:element">
            <subModelOperations xsi:type="tool:MoveElement" newContainerExpression="var:newContainer" featureName="employees"/>
            <subModelOperations xsi:type="tool:SetValue" featureName="wage" valueExpression="aql:element.wage + 500 "/>
          </firstModelOperation>
          <oldContainer name="oldContainer"/>
          <newContainer name="newContainer"/>
          <element name="element"/>
          <newViewContainer name="newViewContainer"/>
          <precedingSiblings name="precedingSiblings" documentation="The list of all the preceding siblings in a Drag and Drop operation"/>
        </dropTools>
      </subItemMappings>
      <subItemMappings name="Poor Department" domainClass="PoorDepartment" semanticCandidatesExpression="aql:self.eAllContents()->filter(employee::PoorDepartment)">
        <defaultStyle>
          <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
        </defaultStyle>
        <subItemMappings name="Poor Employee" domainClass="Employee" semanticCandidatesExpression="aql:self.eAllContents()->filter(employee::Employee)">
          <defaultStyle>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </defaultStyle>
        </subItemMappings>
        <dropTools name="From Poor To Poor Department" precondition="aql:element.oclIsKindOf(employee::Employee)  and  element.eContainer().oclIsKindOf(employee::PoorDepartment)  and   self.name &lt;> 'employe3'" forceRefresh="true" dragSource="BOTH">
          <firstModelOperation xsi:type="tool:ChangeContext" browseExpression="var:element">
            <subModelOperations xsi:type="tool:MoveElement" newContainerExpression="var:newContainer" featureName="employees"/>
            <subModelOperations xsi:type="tool:SetValue" featureName="wage" valueExpression="aql:self.wage - 10"/>
          </firstModelOperation>
          <oldContainer name="oldContainer"/>
          <newContainer name="newContainer"/>
          <element name="element"/>
          <newViewContainer name="newViewContainer"/>
          <precedingSiblings name="precedingSiblings" documentation="The list of all the preceding siblings in a Drag and Drop operation"/>
        </dropTools>
        <dropTools name="From Rich To Poor Department" precondition="aql:element.oclIsKindOf(employee::Employee)  and  element.eContainer().oclIsKindOf(employee::RichDepartment)" forceRefresh="true" dragSource="BOTH">
          <firstModelOperation xsi:type="tool:ChangeContext" browseExpression="var:element">
            <subModelOperations xsi:type="tool:MoveElement" newContainerExpression="var:newContainer" featureName="employees"/>
            <subModelOperations xsi:type="tool:SetValue" featureName="wage" valueExpression="aql:element.wage /2 "/>
          </firstModelOperation>
          <oldContainer name="oldContainer"/>
          <newContainer name="newContainer"/>
          <element name="element"/>
          <newViewContainer name="newViewContainer"/>
          <precedingSiblings name="precedingSiblings" documentation="The list of all the preceding siblings in a Drag and Drop operation"/>
        </dropTools>
      </subItemMappings>
      <dropTools name=" To Company" precondition="aql:element.oclIsKindOf(employee::Department)" forceRefresh="true" dragSource="BOTH">
        <firstModelOperation xsi:type="tool:ChangeContext" browseExpression="var:element">
          <subModelOperations xsi:type="tool:MoveElement" newContainerExpression="var:newContainer" featureName="departments"/>
          <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:element.name + '_DROPPED'"/>
        </firstModelOperation>
        <oldContainer name="oldContainer"/>
        <newContainer name="newContainer"/>
        <element name="element"/>
        <newViewContainer name="newViewContainer"/>
        <precedingSiblings name="precedingSiblings" documentation="The list of all the preceding siblings in a Drag and Drop operation"/>
      </dropTools>
    </ownedRepresentations>
  </ownedViewpoints>
  <userColorsPalettes name="Ecore Palette">
    <entries xsi:type="description:InterpolatedColor" name="Size Based Color" colorValueComputationExpression="aql:self.eContents()->size()"/>
    <entries xsi:type="description:UserFixedColor" red="250" green="190" blue="190" name="MomentIntervalColor"/>
    <entries xsi:type="description:UserFixedColor" red="250" green="240" blue="180" name="RoleColor"/>
    <entries xsi:type="description:UserFixedColor" red="180" green="230" blue="180" name="PartyPlaceThingColor"/>
    <entries xsi:type="description:UserFixedColor" red="180" green="200" blue="210" name="DescriptionColor"/>
  </userColorsPalettes>
</description:Group>
