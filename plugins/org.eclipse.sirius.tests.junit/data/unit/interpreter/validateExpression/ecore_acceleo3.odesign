<?xml version="1.0" encoding="ASCII"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:description_2="http://www.eclipse.org/sirius/table/description/1.1.0" xmlns:description_3="http://www.eclipse.org/sirius/tree/description/1.0.0" xmlns:description_4="http://www.eclipse.org/sirius/diagram/sequence/description/2.0.0" xmlns:filter="http://www.eclipse.org/sirius/diagram/description/filter/1.1.0" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" xmlns:tool_2="http://www.eclipse.org/sirius/diagram/sequence/description/tool/2.0.0" xmlns:validation="http://www.eclipse.org/sirius/description/validation/1.1.0" name="Ecore Editing Workbench V4.6" version="11.1.1.201610211630">
  <ownedViewpoints endUserDocumentation="Provides graphical and tabular modelers to design an Ecore model." name="Design" modelFileExtension="ecore">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" dropDescriptions="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@toolSections.0/@ownedTools[name='External%20EClass%20from%20treeview'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@additionalLayers[name='Package']/@toolSections.0/@ownedTools[name='Drop%20EClassifier%20into%20EPackage'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@additionalLayers[name='Package']/@toolSections.0/@ownedTools[name='Drop%20external%20package']" endUserDocumentation="A graphical modeler for Ecore model similar to a UML class diagram." name="Entities Acceleo2" titleExpression="aql:self.name + ' package entities'" domainClass="ecore.EPackage" enablePopupBars="true">
      <metamodel href="http://www.eclipse.org/emf/2002/Ecore#/"/>
      <filters xsi:type="filter:CompositeFilterDescription" name="Hide class content">
        <filters xsi:type="filter:MappingFilter" mappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20EClass']/@subNodeMappings[name='EC%20EAttribute'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20EClass']/@subNodeMappings[name='Operation']"/>
      </filters>
      <filters xsi:type="filter:CompositeFilterDescription" name="Hide generalizations">
        <filters xsi:type="filter:MappingFilter" mappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@edgeMappings[name='EC%20ESupertypes']"/>
      </filters>
      <filters xsi:type="filter:CompositeFilterDescription" name="Hide references">
        <filters xsi:type="filter:MappingFilter" mappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@edgeMappings[name='EC_EReference'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@edgeMappings[name='Bi-directional%20EC_EReference%20']"/>
      </filters>
      <filters xsi:type="filter:CompositeFilterDescription" name="Hide derived features">
        <filters xsi:type="filter:MappingFilter" mappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@edgeMappings[name='EC_EReference'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20EClass']/@subNodeMappings[name='EC%20EAttribute']" semanticConditionExpression="aql:self.oclIsKindOf(ecore::EStructuralFeature) and not self.derived"/>
      </filters>
      <filters xsi:type="filter:CompositeFilterDescription" name="Hide operations">
        <filters xsi:type="filter:MappingFilter" mappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20EClass']/@subNodeMappings[name='Operation']" semanticConditionExpression=""/>
      </filters>
      <validationSet name="Validation">
        <ownedRules xsi:type="validation:ViewValidationRule" name="R1" message="something" targets="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20EClass']">
          <audits auditExpression="aql:(((Sequence{self.target} + target.eAllSuperTypes).eInverse()->filter(ecore::EClass) + (Sequence{target} + target.eAllSuperTypes).eInverse()->filter(ecore::EReference) ) - Sequence{target.eAllStructuralFeatures})->size() &lt;> 0"/>
          <fixes name="Remove Element">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.target">
                <subModelOperations xsi:type="tool:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </fixes>
        </ownedRules>
        <ownedRules xsi:type="validation:ViewValidationRule" name="R2" level="ERROR" message="aql:'The ' + self.target.name + ' class has more than 3 super types'" targets="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20EClass']">
          <audits auditExpression="aql:self.target.eAllSuperTypes->size() &lt; 4"/>
        </ownedRules>
      </validationSet>
      <defaultLayer name="Default">
        <edgeMappings name="EC_EReference" preconditionExpression="aql:self.eOpposite = null" labelDirectEdit="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@toolSections.4/@ownedTools[name='EReference%20Name']" semanticElements="var:self" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20EClass'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20External%20EClass']" targetMapping="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20EClass'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20External%20EClass']" targetFinderExpression="aql:self.eType" sourceFinderExpression="feature:eContainer" domainClass="ecore.EReference" useDomainElement="true" reconnections="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@toolSections.3/@ownedTools[name='ReconnectEReference']">
          <style>
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription showIcon="false" labelExpression="aql:self.render()">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql:self.containment  and  self.derived">
            <style sourceArrow="FillDiamond" targetArrow="NoDecoration">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
              <centerLabelStyleDescription showIcon="false" labelExpression="aql:self.render()">
                <labelFormat>italic</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:not self.containment  and  self.derived">
            <style>
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
              <centerLabelStyleDescription showIcon="false" labelExpression="aql:self.render()">
                <labelFormat>italic</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.containment">
            <style sourceArrow="FillDiamond" targetArrow="NoDecoration">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription showIcon="false" labelExpression="aql:self.render()">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="EC ESupertypes" deletionDescription="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@toolSections.2/@ownedTools[name='Delete%20ESuperType']" semanticCandidatesExpression="feature:eAllContents" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20EClass'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20External%20EClass']" targetMapping="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20EClass'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20External%20EClass']" targetFinderExpression="aql:self.eSuperTypes" reconnections="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@toolSections.3/@ownedTools[name='ReconnectESupertype']">
          <style targetArrow="InputClosedArrow" routingStyle="tree">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql:view.targetNode->filter(ecore::EClass)->select( e | e.interface)->size() > 0">
            <style lineStyle="dash" targetArrow="InputClosedArrow" routingStyle="tree">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <centerLabelStyleDescription showIcon="false">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="Bi-directional EC_EReference " semanticCandidatesExpression="aql:self.getEOppositeEReferences(self.eAllContents(ecore::EReference))" semanticElements="aql:Sequence{self} + Sequence{self.eOpposite}" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20EClass'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20External%20EClass']" targetMapping="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20EClass'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20External%20EClass']" targetFinderExpression="aql:self.eType" sourceFinderExpression="feature:eContainer" targetExpression="" domainClass="ecore.EReference" useDomainElement="true">
          <style targetArrow="NoDecoration">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription showIcon="false" labelExpression="aql: if self.derived then '/' + self.getEOppositeEReferenceName() else self.getEOppositeEReferenceName() endif">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="EC EClass" labelDirectEdit="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@toolSections.4/@ownedTools[name='Edit%20Name']" semanticCandidatesExpression="aql:self.eContents()->filter(ecore::EClass)" domainClass="ecore.EClass" dropDescriptions="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@toolSections.1/@ownedTools[name='Drop%20attribute'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@toolSections.1/@ownedTools[name='Drop%20operation']" childrenPresentation="List">
          <subNodeMappings name="EC EAttribute" labelDirectEdit="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@toolSections.4/@ownedTools[name='Edit%20EAttribute%20Name']" semanticCandidatesExpression="feature:eAllContents" domainClass="ecore.EAttribute">
            <style xsi:type="style:BundledImageDescription" labelExpression="aql:self.render()" labelAlignment="LEFT" sizeComputationExpression="1">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="Operation" labelDirectEdit="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@toolSections.4/@ownedTools[name='Operation%20Name']" semanticCandidatesExpression="feature:eAllContents" semanticElements="aql:Sequence{self} + self.eParameters" domainClass="EOperation">
            <style xsi:type="style:BundledImageDescription" labelSize="10" labelExpression="aql:self.render()" labelAlignment="LEFT" tooltipExpression="aql:self.name + '(' + self.eParameters.name->sep(',') + '): '+ self.eType.name" sizeComputationExpression="2">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" tooltipExpression="aql:self.eContainer().name + '.' + self.name" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
          </style>
          <conditionnalStyles predicateExpression="aql:self.abstract">
            <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" tooltipExpression="aql:self.eContainer().name + '.' + self.name" backgroundStyle="GradientTopToBottom">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>italic</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </conditionnalStyles>
        </containerMappings>
        <containerMappings name="EC EEnum" labelDirectEdit="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@toolSections.4/@ownedTools[name='Edit%20Name']" semanticCandidatesExpression="aql:self.eContents()->filter(ecore::EEnum)" domainClass="EEnum" childrenPresentation="List">
          <subNodeMappings name="EC EEnumLiteral" labelDirectEdit="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@toolSections.4/@ownedTools[name='Edit%20Name']" semanticCandidatesExpression="ocl:eLiterals" domainClass="EEnumLiteral">
            <style xsi:type="style:BundledImageDescription" labelAlignment="LEFT" sizeComputationExpression="1">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_yellow']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <containerMappings name="EC EDataType" labelDirectEdit="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@toolSections.4/@ownedTools[name='Edit%20Name']" semanticCandidatesExpression="aql:self.eContents()->filter(ecore::EDataType)->select( e | e.eClass().name = 'ecore::EDataType')" domainClass="EDataType" childrenPresentation="List">
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <containerMappings name="EC External EClass" semanticCandidatesExpression="aql:self.allRoots().eAllContents(ecore::EClass) - self.eContents()->filter(ecore::EClass)" createElements="false" domainClass="ecore.EClass" dropDescriptions="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@toolSections.1/@ownedTools[name='Drop%20attribute'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@toolSections.1/@ownedTools[name='Drop%20operation']" childrenPresentation="List">
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" tooltipExpression="aql:self.name + ' in ' + self.eResource().getURI().lastSegment()" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <toolSections name="Classifier">
          <ownedTools xsi:type="tool_1:ToolGroup" name="Classifier">
            <tools xsi:type="tool_1:ContainerCreationDescription" name="Class" containerMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20EClass']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:CreateInstance" typeName="ecore.EClass" referenceName="eClassifiers">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'new EClass ' + self.eContainer().eContents()->filter(ecore::EClass)->size()"/>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool_1:ContainerCreationDescription" name="Abstract Class" containerMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20EClass']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:CreateInstance" typeName="ecore.EClass" referenceName="eClassifiers">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'new AbstractClass ' + self.eContainer().eContents()->filter(ecore::EClass)->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="abstract" valueExpression="true"/>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool_1:ContainerCreationDescription" name="Interface" containerMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20EClass']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:CreateInstance" typeName="ecore.EClass" referenceName="eClassifiers">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'new Interface ' + self.eContainer().eContents()->filter(ecore::EClass)->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="interface" valueExpression="true"/>
                </firstModelOperations>
              </initialOperation>
            </tools>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="Datatype" containerMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20EDataType']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:CreateInstance" typeName="EDataType" referenceName="eClassifiers"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="Enumeration" containerMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20EEnum']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:CreateInstance" typeName="EEnum" referenceName="eClassifiers"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerDropDescription" name="External EClass from treeview" forceRefresh="true" mappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20External%20EClass']" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Feature">
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="Literal" nodeMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20EEnum']/@subNodeMappings[name='EC%20EEnumLiteral']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:CreateInstance" typeName="EEnumLiteral" referenceName="eLiterals"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="Operation" nodeMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20EClass']/@subNodeMappings[name='Operation']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:CreateInstance" typeName="EOperation" referenceName="eOperations">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="new Operation"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="Attribute" nodeMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20EClass']/@subNodeMappings[name='EC%20EAttribute']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:CreateInstance" typeName="ecore.EAttribute" referenceName="eStructuralFeatures">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="new Attribute"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerDropDescription" name="Drop attribute" mappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20EClass']/@subNodeMappings[name='EC%20EAttribute']">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newSemanticContainer">
                <subModelOperations xsi:type="tool:SetValue" featureName="eStructuralFeatures" valueExpression="var:element"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerDropDescription" name="Drop operation" mappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20EClass']/@subNodeMappings[name='Operation']">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newSemanticContainer">
                <subModelOperations xsi:type="tool:SetValue" featureName="eOperations" valueExpression="var:element"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Relation">
          <ownedTools xsi:type="tool_1:DiagramCreationDescription" name="New Package Entities" titleExpression="aql:self.name + ' package entities'" diagramDescription="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']">
            <initialOperation/>
            <containerViewVariable name="containerView"/>
            <representationNameVariable name="diagramName"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="SuperType" edgeMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@edgeMappings[name='EC%20ESupertypes']" iconPath="/org.eclipse.sirius.ui/icons/full/obj16/EdgeMapping.gif">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool:SetValue" featureName="eSuperTypes" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="Reference" edgeMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@edgeMappings[name='EC_EReference']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="ecore.EReference" referenceName="eStructuralFeatures">
                  <subModelOperations xsi:type="tool:SetValue" featureName="eType" valueExpression="var:target"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'newEReference' + self.eContainerOrSelf(ecore::EClassifier).eAllContents(ecore::EReference)->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="Bi-directional Reference" edgeMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@edgeMappings[name='Bi-directional%20EC_EReference%20']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:target">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="ecore.EReference" referenceName="eStructuralFeatures" variableName="instanceTarget">
                  <subModelOperations xsi:type="tool:SetValue" featureName="eType" valueExpression="var:source"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:source.name.toLower()"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="ecore.EReference" referenceName="eStructuralFeatures" variableName="instanceSource">
                    <subModelOperations xsi:type="tool:SetValue" featureName="eType" valueExpression="var:target"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:target.name.toLower()"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="eOpposite" valueExpression="var:instanceTarget"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:instanceTarget">
                    <subModelOperations xsi:type="tool:SetValue" featureName="eOpposite" valueExpression="var:instanceSource"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="Composition" edgeMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@edgeMappings[name='EC_EReference']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="ecore.EReference" referenceName="eStructuralFeatures">
                  <subModelOperations xsi:type="tool:SetValue" featureName="eType" valueExpression="var:target"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="new EReference"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="containment" valueExpression="aql:true"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DeleteElementDescription" name="Delete ESuperType">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:elementView.sourceNode.target">
                <subModelOperations xsi:type="tool:Unset" featureName="eSuperTypes" elementExpression="aql:elementView.targetNode.target"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Reconnect">
          <ownedTools xsi:type="tool_1:ReconnectEdgeDescription" name="ReconnectEReference" reconnectionKind="RECONNECT_BOTH">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:source &lt;> element.eContainer()">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                    <subModelOperations xsi:type="tool:SetValue" featureName="eType" valueExpression="var:target"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:source = element.eContainer()">
                  <subModelOperations xsi:type="tool:If" conditionExpression="aql:otherEnd = sourceView">
                    <subModelOperations xsi:type="tool:If" conditionExpression="aql:otherEnd = edgeView.targetNode">
                      <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:target">
                        <subModelOperations xsi:type="tool:SetValue" featureName="eStructuralFeatures" valueExpression="var:element"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool:If" conditionExpression="aql:otherEnd &lt;> edgeView.targetNode">
                      <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                        <subModelOperations xsi:type="tool:SetValue" featureName="eType" valueExpression="aql:edgeView.targetNode.target"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:otherEnd.getTarget()">
                        <subModelOperations xsi:type="tool:SetValue" featureName="eStructuralFeatures" valueExpression="var:element"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:If" conditionExpression="aql:otherEnd &lt;> sourceView">
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:target">
                      <subModelOperations xsi:type="tool:SetValue" featureName="eStructuralFeatures" valueExpression="var:element"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ReconnectEdgeDescription" name="ReconnectESupertype" reconnectionKind="RECONNECT_BOTH">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:source &lt;> element">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                    <subModelOperations xsi:type="tool:SetValue" featureName="eSuperTypes" valueExpression="var:target"/>
                    <subModelOperations xsi:type="tool:Unset" featureName="eSuperTypes" elementExpression="var:source"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:source = element">
                  <subModelOperations xsi:type="tool:If" conditionExpression="aql:otherEnd = sourceView">
                    <subModelOperations xsi:type="tool:If" conditionExpression="aql:otherEnd = edgeView.targetNode">
                      <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:target">
                        <subModelOperations xsi:type="tool:SetValue" featureName="eSuperTypes" valueExpression="aql:edgeView.targetNode.target"/>
                        <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                          <subModelOperations xsi:type="tool:Unset" featureName="eSuperTypes" elementExpression="var:element"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool:If" conditionExpression="aql:otherEnd &lt;> edgeView.targetNode">
                      <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                        <subModelOperations xsi:type="tool:SetValue" featureName="eSuperTypes" valueExpression="var:target"/>
                        <subModelOperations xsi:type="tool:Unset" featureName="eSuperTypes" elementExpression="var:source"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:If" conditionExpression="aql:otherEnd &lt;> sourceView">
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:target">
                      <subModelOperations xsi:type="tool:SetValue" featureName="eSuperTypes" valueExpression="aql:edgeView.targetNode.target"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                      <subModelOperations xsi:type="tool:Unset" featureName="eSuperTypes" elementExpression="aql:edgeView.targetNode.target"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
        </toolSections>
        <toolSections name="Direct Edit">
          <ownedTools xsi:type="tool_1:DirectEditLabel" name="Edit Name">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="var:arg0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DirectEditLabel" name="Edit EAttribute Name">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.performEdit(arg0)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DirectEditLabel" name="EReference Name">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.performEdit(arg0)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DirectEditLabel" documentation="- &quot;name&quot; : change the name of the operation" name="Operation Name" forceRefresh="true">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.performEdit(arg0)"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Help" label="Help">
          <ownedTools xsi:type="tool:OperationAction" name="Open Entities User Guide" label="Open User Guide">
            <view name="views"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ExternalJavaAction" name="Open Entities User Guide Action" id="org.eclipse.sirius.ui.business.api.action.openHelpSection">
                <parameters name="href" value="/org.eclipse.sirius.sample.ecore.design/doc/user-guide.html#design.entities"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
      <additionalLayers endUserDocumentation="Add support for sub-packages." name="Package" activeByDefault="true">
        <containerMappings name="Design Package" detailDescriptions="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@toolSections.2/@ownedTools[name='New%20Package%20Entities']" labelDirectEdit="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@toolSections.4/@ownedTools[name='Edit%20Name']" semanticCandidatesExpression="aql:self.eContents()->filter(ecore::EPackage)" domainClass="ecore.EPackage" dropDescriptions="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@additionalLayers[name='Package']/@toolSections.0/@ownedTools[name='Drop%20EClassifier%20into%20EPackage'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@additionalLayers[name='Package']/@toolSections.0/@ownedTools[name='Drop%20EPackage%20into%20EPackage']" reusedContainerMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@additionalLayers[name='Package']/@containerMappings[name='Design%20Package'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20EClass'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20EEnum'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20EDataType']">
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" labelSize="10" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_yellow']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <containerMappings name="Dropped Package" detailDescriptions="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@toolSections.2/@ownedTools[name='New%20Package%20Entities']" createElements="false" domainClass="ecore.EPackage" dropDescriptions="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@additionalLayers[name='Package']/@toolSections.0/@ownedTools[name='Drop%20EClassifier%20into%20EPackage'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@additionalLayers[name='Package']/@toolSections.0/@ownedTools[name='Drop%20EPackage%20into%20EPackage']" reusedContainerMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20EClass'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20EDataType'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20EEnum'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@additionalLayers[name='Package']/@containerMappings[name='Design%20Package']">
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" labelSize="10" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <toolSections name="Package">
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="Package" containerMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@additionalLayers[name='Package']/@containerMappings[name='Design%20Package']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:CreateInstance" typeName="ecore.EPackage" referenceName="eSubpackages" variableName="package">
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:package">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'new Package ' + self.eContainer().eContents()->filter(ecore::EPackage)->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerDropDescription" name="Drop EClassifier into EPackage" mappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20EClass'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20EDataType'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@defaultLayer/@containerMappings[name='EC%20EEnum']">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newSemanticContainer">
                <subModelOperations xsi:type="tool:SetValue" featureName="eClassifiers" valueExpression="var:element"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerDropDescription" name="Drop external package" mappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@additionalLayers[name='Package']/@containerMappings[name='Dropped%20Package']" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerDropDescription" name="Drop EPackage into EPackage" mappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@additionalLayers[name='Package']/@containerMappings[name='Design%20Package'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo2']/@additionalLayers[name='Package']/@containerMappings[name='Dropped%20Package']" dragSource="BOTH">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newSemanticContainer">
                <subModelOperations xsi:type="tool:SetValue" featureName="eSubpackages" valueExpression="var:element"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
      <additionalLayers name="Dynamic">
        <toolSections name="Dynamic">
          <ownedTools xsi:type="tool:ToolDescription" name="Dynamic instance" precondition="aql:self.oclIsKindOf(ecore::EClass)" iconPath="/org.eclipse.sirius.sample.ecore.design/icons/full/obj16/DynamicInstance.gif">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ExternalJavaAction" name="Create dynamic instance of a specified EClass" id="org.eclipse.sirius.sample.ecore.design.action.createDynamicInstanceActionID">
                <parameters name="eClass" value="var:element"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" dropDescriptions="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@toolSections.0/@ownedTools[name='External%20EClass%20from%20treeview'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@additionalLayers[name='Package']/@toolSections.0/@ownedTools[name='Drop%20EClassifier%20into%20EPackage'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@additionalLayers[name='Package']/@toolSections.0/@ownedTools[name='Drop%20external%20package']" endUserDocumentation="A graphical modeler for Ecore model similar to a UML class diagram." name="Entities Acceleo3" titleExpression="aql:self.name + ' package entities'" domainClass="ecore.EPackage" enablePopupBars="true">
      <metamodel href="http://www.eclipse.org/emf/2002/Ecore#/"/>
      <filters xsi:type="filter:CompositeFilterDescription" name="Hide class content">
        <filters xsi:type="filter:MappingFilter" mappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20EClass']/@subNodeMappings[name='EC%20EAttribute'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20EClass']/@subNodeMappings[name='Operation']"/>
      </filters>
      <filters xsi:type="filter:CompositeFilterDescription" name="Hide generalizations">
        <filters xsi:type="filter:MappingFilter" mappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@edgeMappings[name='EC%20ESupertypes']"/>
      </filters>
      <filters xsi:type="filter:CompositeFilterDescription" name="Hide references">
        <filters xsi:type="filter:MappingFilter" mappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@edgeMappings[name='EC_EReference'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@edgeMappings[name='Bi-directional%20EC_EReference%20']"/>
      </filters>
      <filters xsi:type="filter:CompositeFilterDescription" name="Hide derived features">
        <filters xsi:type="filter:MappingFilter" mappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@edgeMappings[name='EC_EReference'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20EClass']/@subNodeMappings[name='EC%20EAttribute']" semanticConditionExpression="aql:self.oclIsKindOf(ecore::EStructuralFeature) and not self.derived"/>
      </filters>
      <filters xsi:type="filter:CompositeFilterDescription" name="Hide operations">
        <filters xsi:type="filter:MappingFilter" mappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20EClass']/@subNodeMappings[name='Operation']" semanticConditionExpression=""/>
      </filters>
      <validationSet name="Validation">
        <ownedRules xsi:type="validation:ViewValidationRule" name="R1" message="something" targets="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20EClass']">
          <audits auditExpression="aql:(((Sequence{self.target} + target.eAllSuperTypes).eInverse()->filter(ecore::EClass) + (Sequence{target} + target.eAllSuperTypes).eInverse()->filter(ecore::EReference) ) - Sequence{target.eAllStructuralFeatures})->size() &lt;> 0"/>
          <fixes name="Remove Element">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.target">
                <subModelOperations xsi:type="tool:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </fixes>
        </ownedRules>
        <ownedRules xsi:type="validation:ViewValidationRule" name="R2" level="ERROR" message="aql:'The ' + self.target.name + ' class has more than 3 super types'" targets="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20EClass']">
          <audits auditExpression="aql:self.target.eAllSuperTypes->size() &lt; 4"/>
        </ownedRules>
        <ownedRules xsi:type="validation:SemanticValidationRule" name="R3" targetClass="EClass">
          <audits auditExpression="[eAttributes->size()>0/]"/>
        </ownedRules>
      </validationSet>
      <defaultLayer name="Default">
        <edgeMappings name="EC_EReference" preconditionExpression="aql:self.eOpposite = null" labelDirectEdit="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@toolSections.4/@ownedTools[name='EReference%20Name']" semanticElements="[self/]" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20EClass'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20External%20EClass']" targetMapping="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20EClass'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20External%20EClass']" targetFinderExpression="[self.eType/]" sourceFinderExpression="[eContainer(OclAny)/]" domainClass="ecore.EReference" useDomainElement="true" reconnections="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@toolSections.3/@ownedTools[name='ReconnectEReference']">
          <style>
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription showIcon="false" labelExpression="[name/]">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="[containment and derived/]">
            <style sourceArrow="FillDiamond" targetArrow="NoDecoration">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
              <centerLabelStyleDescription showIcon="false" labelExpression="aql:self.render()">
                <labelFormat>italic</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="[not(containment) and derived/]">
            <style>
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
              <centerLabelStyleDescription showIcon="false" labelExpression="aql:self.render()">
                <labelFormat>italic</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="[containment/]">
            <style sourceArrow="FillDiamond" targetArrow="NoDecoration">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription showIcon="false" labelExpression="aql:self.render()">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="EC ESupertypes" deletionDescription="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@toolSections.2/@ownedTools[name='Delete%20ESuperType']" semanticCandidatesExpression="feature:eAllContents" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20EClass'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20External%20EClass']" targetMapping="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20EClass'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20External%20EClass']" targetFinderExpression="[eSuperTypes/]" reconnections="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@toolSections.3/@ownedTools[name='ReconnectESupertype']">
          <style targetArrow="InputClosedArrow" routingStyle="tree">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription showIcon="false" labelExpression="[name/]">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql:view.targetNode->filter(ecore::EClass)->select( e | e.interface)->size() > 0">
            <style lineStyle="dash" targetArrow="InputClosedArrow" routingStyle="tree">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <centerLabelStyleDescription showIcon="false" labelExpression="[name/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="Bi-directional EC_EReference " semanticCandidatesExpression="aql:self.getEOppositeEReferences(self.eAllContents(ecore::EReference))" semanticElements="aql:Sequence{self} + Sequence{self.eOpposite}" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20EClass'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20External%20EClass']" targetMapping="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20EClass'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20External%20EClass']" targetFinderExpression="[eType/]" sourceFinderExpression="[eContainer(OclAny)/]" targetExpression="" domainClass="ecore.EReference" useDomainElement="true">
          <style targetArrow="NoDecoration">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription showIcon="false" labelExpression="aql: if self.derived then '/' + self.getEOppositeEReferenceName() else self.getEOppositeEReferenceName() endif">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="EC EClass" labelDirectEdit="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@toolSections.4/@ownedTools[name='Edit%20Name']" semanticCandidatesExpression="[eClassifiers/]" domainClass="ecore.EClass" dropDescriptions="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@toolSections.1/@ownedTools[name='Drop%20attribute'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@toolSections.1/@ownedTools[name='Drop%20operation']" childrenPresentation="List">
          <subNodeMappings name="EC EAttribute" labelDirectEdit="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@toolSections.4/@ownedTools[name='Edit%20EAttribute%20Name']" semanticCandidatesExpression="[eAttributes/]" domainClass="ecore.EAttribute">
            <style xsi:type="style:BundledImageDescription" labelExpression="[name/]" labelAlignment="LEFT" sizeComputationExpression="1">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="Operation" labelDirectEdit="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@toolSections.4/@ownedTools[name='Operation%20Name']" semanticCandidatesExpression="[eOperations/]" semanticElements="[eParameters->including(self)/]" domainClass="EOperation">
            <style xsi:type="style:BundledImageDescription" labelSize="10" labelExpression="[name/]" labelAlignment="LEFT" tooltipExpression="[name + '(' + eParameters->collect(name)->sep(', ') +':' + eType.name/]" sizeComputationExpression="2">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" labelExpression="[name/]" tooltipExpression="[self.eContainer(EPackage).name + '.' + name/]" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
          </style>
          <conditionnalStyles predicateExpression="[abstract/]">
            <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" labelExpression="[name/]" tooltipExpression="[self.eContainer(EPackage).name + '.' + name/]" backgroundStyle="GradientTopToBottom">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>italic</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </conditionnalStyles>
        </containerMappings>
        <containerMappings name="EC EEnum" labelDirectEdit="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@toolSections.4/@ownedTools[name='Edit%20Name']" semanticCandidatesExpression="aql:self.eContents()->filter(ecore::EEnum)" domainClass="EEnum" childrenPresentation="List">
          <subNodeMappings name="EC EEnumLiteral" labelDirectEdit="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@toolSections.4/@ownedTools[name='Edit%20Name']" semanticCandidatesExpression="ocl:eLiterals" domainClass="EEnumLiteral">
            <style xsi:type="style:BundledImageDescription" labelAlignment="LEFT" sizeComputationExpression="1">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_yellow']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <containerMappings name="EC EDataType" labelDirectEdit="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@toolSections.4/@ownedTools[name='Edit%20Name']" semanticCandidatesExpression="aql:self.eContents()->filter(ecore::EDataType)->select( e | e.eClass().name = 'ecore::EDataType')" domainClass="EDataType" childrenPresentation="List">
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <containerMappings name="EC External EClass" semanticCandidatesExpression="aql:self.allRoots().eAllContents(ecore::EClass) - self.eContents()->filter(ecore::EClass)" createElements="false" domainClass="ecore.EClass" dropDescriptions="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@toolSections.1/@ownedTools[name='Drop%20attribute'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@toolSections.1/@ownedTools[name='Drop%20operation']" childrenPresentation="List">
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" tooltipExpression="aql:self.name + ' in ' + self.eResource().getURI().lastSegment()" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <toolSections name="Classifier">
          <ownedTools xsi:type="tool_1:ToolGroup" name="Classifier">
            <tools xsi:type="tool_1:ContainerCreationDescription" name="Class" containerMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20EClass']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:CreateInstance" typeName="ecore.EClass" referenceName="eClassifiers">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="['new EClass '.concat(self.eContainer(EPackage).eClassifiers->size().oclAsType(String))/]"/>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool_1:ContainerCreationDescription" name="Abstract Class" containerMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20EClass']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:CreateInstance" typeName="ecore.EClass" referenceName="eClassifiers">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'new AbstractClass ' + self.eContainer().eContents()->filter(ecore::EClass)->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="abstract" valueExpression="true"/>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool_1:ContainerCreationDescription" name="Interface" containerMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20EClass']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:CreateInstance" typeName="ecore.EClass" referenceName="eClassifiers">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'new Interface ' + self.eContainer().eContents()->filter(ecore::EClass)->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="interface" valueExpression="true"/>
                </firstModelOperations>
              </initialOperation>
            </tools>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="Datatype" containerMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20EDataType']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:CreateInstance" typeName="EDataType" referenceName="eClassifiers"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="Enumeration" containerMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20EEnum']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:CreateInstance" typeName="EEnum" referenceName="eClassifiers"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerDropDescription" name="External EClass from treeview" forceRefresh="true" mappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20External%20EClass']" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="[element/]"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Feature">
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="Literal" nodeMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20EEnum']/@subNodeMappings[name='EC%20EEnumLiteral']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:CreateInstance" typeName="EEnumLiteral" referenceName="eLiterals"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="Operation" nodeMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20EClass']/@subNodeMappings[name='Operation']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:CreateInstance" typeName="EOperation" referenceName="eOperations">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="new Operation"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="Attribute" nodeMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20EClass']/@subNodeMappings[name='EC%20EAttribute']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:CreateInstance" typeName="ecore.EAttribute" referenceName="eStructuralFeatures">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="new Attribute"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerDropDescription" name="Drop attribute" mappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20EClass']/@subNodeMappings[name='EC%20EAttribute']">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="[newSemanticContainer/]">
                <subModelOperations xsi:type="tool:SetValue" featureName="eStructuralFeatures" valueExpression="[element/]"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerDropDescription" name="Drop operation" mappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20EClass']/@subNodeMappings[name='Operation']">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newSemanticContainer">
                <subModelOperations xsi:type="tool:SetValue" featureName="eOperations" valueExpression="var:element"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Relation">
          <ownedTools xsi:type="tool_1:DiagramCreationDescription" name="New Package Entities" titleExpression="aql:self.name + ' package entities'" diagramDescription="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']">
            <initialOperation/>
            <containerViewVariable name="containerView"/>
            <representationNameVariable name="diagramName"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="SuperType" edgeMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@edgeMappings[name='EC%20ESupertypes']" iconPath="/org.eclipse.sirius.ui/icons/full/obj16/EdgeMapping.gif">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool:SetValue" featureName="eSuperTypes" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="Reference" edgeMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@edgeMappings[name='EC_EReference']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="ecore.EReference" referenceName="eStructuralFeatures">
                  <subModelOperations xsi:type="tool:SetValue" featureName="eType" valueExpression="var:target"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'newEReference' + self.eContainerOrSelf(ecore::EClassifier).eAllContents(ecore::EReference)->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="Bi-directional Reference" edgeMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@edgeMappings[name='Bi-directional%20EC_EReference%20']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:target">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="ecore.EReference" referenceName="eStructuralFeatures" variableName="instanceTarget">
                  <subModelOperations xsi:type="tool:SetValue" featureName="eType" valueExpression="var:source"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:source.name.toLower()"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="ecore.EReference" referenceName="eStructuralFeatures" variableName="instanceSource">
                    <subModelOperations xsi:type="tool:SetValue" featureName="eType" valueExpression="var:target"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:target.name.toLower()"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="eOpposite" valueExpression="var:instanceTarget"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:instanceTarget">
                    <subModelOperations xsi:type="tool:SetValue" featureName="eOpposite" valueExpression="var:instanceSource"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="Composition" edgeMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@edgeMappings[name='EC_EReference']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="ecore.EReference" referenceName="eStructuralFeatures">
                  <subModelOperations xsi:type="tool:SetValue" featureName="eType" valueExpression="var:target"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="new EReference"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="containment" valueExpression="aql:true"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DeleteElementDescription" name="Delete ESuperType">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:elementView.sourceNode.target">
                <subModelOperations xsi:type="tool:Unset" featureName="eSuperTypes" elementExpression="aql:elementView.targetNode.target"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Reconnect">
          <ownedTools xsi:type="tool_1:ReconnectEdgeDescription" name="ReconnectEReference" reconnectionKind="RECONNECT_BOTH">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:source &lt;> element.eContainer()">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                    <subModelOperations xsi:type="tool:SetValue" featureName="eType" valueExpression="var:target"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:source = element.eContainer()">
                  <subModelOperations xsi:type="tool:If" conditionExpression="aql:otherEnd = sourceView">
                    <subModelOperations xsi:type="tool:If" conditionExpression="aql:otherEnd = edgeView.targetNode">
                      <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:target">
                        <subModelOperations xsi:type="tool:SetValue" featureName="eStructuralFeatures" valueExpression="var:element"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool:If" conditionExpression="aql:otherEnd &lt;> edgeView.targetNode">
                      <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                        <subModelOperations xsi:type="tool:SetValue" featureName="eType" valueExpression="aql:edgeView.targetNode.target"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:otherEnd.getTarget()">
                        <subModelOperations xsi:type="tool:SetValue" featureName="eStructuralFeatures" valueExpression="var:element"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:If" conditionExpression="aql:otherEnd &lt;> sourceView">
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:target">
                      <subModelOperations xsi:type="tool:SetValue" featureName="eStructuralFeatures" valueExpression="var:element"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ReconnectEdgeDescription" name="ReconnectESupertype" reconnectionKind="RECONNECT_BOTH">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:source &lt;> element">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                    <subModelOperations xsi:type="tool:SetValue" featureName="eSuperTypes" valueExpression="var:target"/>
                    <subModelOperations xsi:type="tool:Unset" featureName="eSuperTypes" elementExpression="var:source"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:source = element">
                  <subModelOperations xsi:type="tool:If" conditionExpression="aql:otherEnd = sourceView">
                    <subModelOperations xsi:type="tool:If" conditionExpression="aql:otherEnd = edgeView.targetNode">
                      <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:target">
                        <subModelOperations xsi:type="tool:SetValue" featureName="eSuperTypes" valueExpression="aql:edgeView.targetNode.target"/>
                        <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                          <subModelOperations xsi:type="tool:Unset" featureName="eSuperTypes" elementExpression="var:element"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool:If" conditionExpression="aql:otherEnd &lt;> edgeView.targetNode">
                      <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                        <subModelOperations xsi:type="tool:SetValue" featureName="eSuperTypes" valueExpression="var:target"/>
                        <subModelOperations xsi:type="tool:Unset" featureName="eSuperTypes" elementExpression="var:source"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:If" conditionExpression="aql:otherEnd &lt;> sourceView">
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:target">
                      <subModelOperations xsi:type="tool:SetValue" featureName="eSuperTypes" valueExpression="aql:edgeView.targetNode.target"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                      <subModelOperations xsi:type="tool:Unset" featureName="eSuperTypes" elementExpression="aql:edgeView.targetNode.target"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
        </toolSections>
        <toolSections name="Direct Edit">
          <ownedTools xsi:type="tool_1:DirectEditLabel" name="Edit Name">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="var:arg0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DirectEditLabel" name="Edit EAttribute Name">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.performEdit(arg0)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DirectEditLabel" name="EReference Name">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.performEdit(arg0)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DirectEditLabel" documentation="- &quot;name&quot; : change the name of the operation" name="Operation Name" forceRefresh="true">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.performEdit(arg0)"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Help" label="Help">
          <ownedTools xsi:type="tool:OperationAction" name="Open Entities User Guide" label="Open User Guide">
            <view name="views"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ExternalJavaAction" name="Open Entities User Guide Action" id="org.eclipse.sirius.ui.business.api.action.openHelpSection">
                <parameters name="href" value="/org.eclipse.sirius.sample.ecore.design/doc/user-guide.html#design.entities"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
      <additionalLayers endUserDocumentation="Add support for sub-packages." name="Package" activeByDefault="true">
        <containerMappings name="Design Package" detailDescriptions="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@toolSections.2/@ownedTools[name='New%20Package%20Entities']" labelDirectEdit="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@toolSections.4/@ownedTools[name='Edit%20Name']" semanticCandidatesExpression="aql:self.eContents()->filter(ecore::EPackage)" domainClass="ecore.EPackage" dropDescriptions="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@additionalLayers[name='Package']/@toolSections.0/@ownedTools[name='Drop%20EClassifier%20into%20EPackage'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@additionalLayers[name='Package']/@toolSections.0/@ownedTools[name='Drop%20EPackage%20into%20EPackage']" reusedContainerMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@additionalLayers[name='Package']/@containerMappings[name='Design%20Package'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20EClass'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20EEnum'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20EDataType']">
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" labelSize="10" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_yellow']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <containerMappings name="Dropped Package" detailDescriptions="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@toolSections.2/@ownedTools[name='New%20Package%20Entities']" createElements="false" domainClass="ecore.EPackage" dropDescriptions="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@additionalLayers[name='Package']/@toolSections.0/@ownedTools[name='Drop%20EClassifier%20into%20EPackage'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@additionalLayers[name='Package']/@toolSections.0/@ownedTools[name='Drop%20EPackage%20into%20EPackage']" reusedContainerMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20EClass'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20EDataType'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20EEnum'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@additionalLayers[name='Package']/@containerMappings[name='Design%20Package']">
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" labelSize="10" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <toolSections name="Package">
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="Package" containerMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@additionalLayers[name='Package']/@containerMappings[name='Design%20Package']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:CreateInstance" typeName="ecore.EPackage" referenceName="eSubpackages" variableName="package">
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:package">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'new Package ' + self.eContainer().eContents()->filter(ecore::EPackage)->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerDropDescription" name="Drop EClassifier into EPackage" mappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20EClass'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20EDataType'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@defaultLayer/@containerMappings[name='EC%20EEnum']">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newSemanticContainer">
                <subModelOperations xsi:type="tool:SetValue" featureName="eClassifiers" valueExpression="var:element"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerDropDescription" name="Drop external package" mappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@additionalLayers[name='Package']/@containerMappings[name='Dropped%20Package']" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerDropDescription" name="Drop EPackage into EPackage" mappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@additionalLayers[name='Package']/@containerMappings[name='Design%20Package'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Entities%20Acceleo3']/@additionalLayers[name='Package']/@containerMappings[name='Dropped%20Package']" dragSource="BOTH">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newSemanticContainer">
                <subModelOperations xsi:type="tool:SetValue" featureName="eSubpackages" valueExpression="var:element"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
      <additionalLayers name="Dynamic">
        <toolSections name="Dynamic">
          <ownedTools xsi:type="tool:ToolDescription" name="Dynamic instance" precondition="aql:self.oclIsKindOf(ecore::EClass)" iconPath="/org.eclipse.sirius.sample.ecore.design/icons/full/obj16/DynamicInstance.gif">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ExternalJavaAction" name="Create dynamic instance of a specified EClass" id="org.eclipse.sirius.sample.ecore.design.action.createDynamicInstanceActionID">
                <parameters name="eClass" value="var:element"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_2:EditionTableDescription" endUserDocumentation="A tabular editor (spreadsheet-like) of the entities in an Ecore model." name="Classes Acceleo3" titleExpression="aql:'Classes in ' + self.name + ' package'" domainClass="ecore.EPackage">
      <metamodel href="http://www.eclipse.org/emf/2002/Ecore#/"/>
      <ownedLineMappings name="Classes lines" domainClass="ecore.EClass" semanticCandidatesExpression="[eClassifiers/]">
        <foregroundConditionalStyle predicateExpression="[abstract/]">
          <style labelSize="10">
            <labelFormat>italic</labelFormat>
            <foreGroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </foregroundConditionalStyle>
        <ownedSubLines name="Feature" domainClass="EStructuralFeature" semanticCandidatesExpression="[eStructuralFeatures/]"/>
      </ownedLineMappings>
      <ownedLineMappings name="Package" domainClass="ecore.EPackage" headerLabelExpression="aql:self.name">
        <defaultBackground>
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_yellow']"/>
        </defaultBackground>
        <ownedSubLines name="Classes lines" domainClass="ecore.EClass" semanticCandidatesExpression="[eClassifiers/]">
          <ownedSubLines name="Feature" domainClass="EStructuralFeature" semanticCandidatesExpression="[eStructuralFeatures/]"/>
        </ownedSubLines>
      </ownedLineMappings>
      <ownedCreateLine name="Create Class" forceRefresh="true" elementsToSelect="service:stdEmptyCollection" mapping="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Classes%20Acceleo3']/@ownedLineMappings[name='Classes%20lines']">
        <variables name="root" documentation="The semantic element of the table."/>
        <variables name="element" documentation="The semantic currently edited element."/>
        <variables name="container" documentation="The semantic element corresponding to the view container."/>
        <firstModelOperation xsi:type="tool:ChangeContext" browseExpression="[container/]">
          <subModelOperations xsi:type="tool:CreateInstance" typeName="ecore.EClass" referenceName="eClassifiers">
            <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="NewEClass"/>
          </subModelOperations>
        </firstModelOperation>
      </ownedCreateLine>
      <ownedColumnMappings name="Name" headerLabelExpression="Name" featureName="name" labelExpression="aql: if self.derived then '/' + self.name else self.name endif"/>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_3:TreeDescription" name="Classes Acceleo3 (Tree)" domainClass="ecore.EPackage">
      <metamodel href="http://www.eclipse.org/emf/2002/Ecore#/"/>
      <subItemMappings name="Class (TreeItem)" domainClass="ecore.EClass" semanticCandidatesExpression="[self.eClassifiers/]">
        <defaultStyle labelExpression="[name/]">
          <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
        </defaultStyle>
        <conditionalStyles predicateExpression="[self.abstract/]">
          <style labelExpression="[name/] [abstract]">
            <labelFormat>italic</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </conditionalStyles>
      </subItemMappings>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_4:SequenceDiagramDescription" name="Sequence Diagram" titleExpression="aql:'Sequence Diagram with Combined Fragments on ' + self.name" domainClass="interactions.Interaction" endsOrdering="aql:self.ends->size() > 0  and  eventEnds->size() > 0">
      <metamodel href="http://www.eclipse.org/emf/2002/Ecore#/"/>
      <metamodel href="http://www.eclipse.org/sirius/sample/interactions#/"/>
      <defaultLayer name="Default">
        <nodeMappings xsi:type="description_4:InstanceRoleMapping" name="Participant" labelDirectEdit="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Edit%20Participant']" semanticCandidatesExpression="[participants/]" semanticElements="[self/]" domainClass="interactions.Participant">
          <borderedNodeMappings xsi:type="description_4:ExecutionMapping" name="Lifeline" semanticCandidatesExpression="[self/]" semanticElements="var:self" domainClass="interactions.Participant" startingEndFinderExpression="[self/]" finishingEndFinderExpression="var:self">
            <borderedNodeMappings xsi:type="description_4:ExecutionMapping" name="Execution" deletionDescription="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='Delete%20Execution']" semanticCandidatesExpression="ocl: let owner_ : Participant = if self.oclIsKindOf(Participant) then self.oclAsType(Participant) else self.oclAsType(Execution).owner.oclAsType(Participant) endif in let _ends : Sequence(AbstractEnd) = Interaction.allInstances()->any(true).ends->asSequence()->select(e : AbstractEnd | e._context = owner_ ) in let filteredEnds : Sequence(AbstractEnd) = if self.oclIsTypeOf(Participant) then _ends else let firstIndex : Integer = _ends->indexOf(self.oclAsType(Execution).start) in let lastIndex : Integer = _ends->indexOf(self.oclAsType(Execution).end) in if ((lastIndex-1)>=(firstIndex+1) and not firstIndex.oclIsInvalid() and not lastIndex.oclIsInvalid()) then _ends->subSequence(firstIndex+1, lastIndex-1) else _ends->select(false) endif endif in filteredEnds->select(end : AbstractEnd | end.oclIsKindOf(ExecutionEnd))->collect(execEnd : AbstractEnd | execEnd.oclAsType(ExecutionEnd).execution)->asSet()" semanticElements="aql:OrderedSet{self, self.start, self.end, self.owner}" domainClass="interactions.Execution" reusedBorderedNodeMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline']/@borderedNodeMappings[name='Execution'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline']/@borderedNodeMappings[name='State']" startingEndFinderExpression="aql:self.start" finishingEndFinderExpression="aql:self.end">
              <style xsi:type="style:SquareDescription" borderSizeComputationExpression="1" showIcon="false" labelExpression="" labelAlignment="LEFT" resizeKind="NORTH_SOUTH" width="2" height="5">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:InterpolatedColor" href="sequenceDiagram.odesign#//@userColorsPalettes[name='Dutch%20Seas']/@entries[name='Interpolated%20blue%20for%20Executions']"/>
              </style>
            </borderedNodeMappings>
            <borderedNodeMappings xsi:type="description_4:StateMapping" name="State" deletionDescription="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.5/@ownedTools[name='Delete%20State']" labelDirectEdit="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.5/@ownedTools[name='Edit%20State']" semanticCandidatesExpression="ocl: let owner_ : Participant = if self.oclIsKindOf(Participant) then self.oclAsType(Participant) else self.oclAsType(State).owner.oclAsType(Participant) endif in let _ends : Sequence(AbstractEnd) = Interaction.allInstances()->any(true).ends->asSequence()->select(e : AbstractEnd | e._context = owner_ ) in let filteredEnds : Sequence(AbstractEnd) = if self.oclIsTypeOf(Participant) then _ends else let firstIndex : Integer = _ends->indexOf(self.oclAsType(State).start) in let lastIndex : Integer = _ends->indexOf(self.oclAsType(State).end) in if ((lastIndex-1)>=(firstIndex+1) and not firstIndex.oclIsInvalid() and not lastIndex.oclIsInvalid()) then _ends->subSequence(firstIndex+1, lastIndex-1) else _ends->select(false) endif endif in filteredEnds->select(end : AbstractEnd | end.oclIsKindOf(StateEnd))->collect(execEnd : AbstractEnd | execEnd.oclAsType(StateEnd).state)->asSet()" semanticElements="aql:OrderedSet{self, self.start, self.end, self.owner}" domainClass="interactions.State" startingEndFinderExpression="aql:self.start" finishingEndFinderExpression="aql:self.end">
              <style xsi:type="style:EllipseNodeDescription" labelSize="15" showIcon="false" labelAlignment="LEFT" labelPosition="node" resizeKind="NORTH_SOUTH" horizontalDiameterComputationExpression="12" verticalDiameterComputationExpression="3">
                <borderColor xsi:type="description:UserFixedColor" href="sequenceDiagram.odesign#//@userColorsPalettes[name='Skyblue']/@entries[name='Midnight_Skyblue']"/>
                <labelColor xsi:type="description:UserFixedColor" href="sequenceDiagram.odesign#//@userColorsPalettes[name='Greens']/@entries[name='Watery%20Green']"/>
                <color xsi:type="description:UserFixedColor" href="sequenceDiagram.odesign#//@userColorsPalettes[name='Skyblue']/@entries[name='High_Skyblue']"/>
              </style>
            </borderedNodeMappings>
            <borderedNodeMappings xsi:type="description_4:EndOfLifeMapping" name="EOL" preconditionExpression="aql:self.eContainerOrSelf(interactions::Interaction).messages->filter(interactions::DestroyParticipantMessage).receivingEnd->select( e | e.context = self)->size() > 0" deletionDescription="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20EndOfLife']" semanticCandidatesExpression="var:self" semanticElements="var:self" domainClass="interactions.Participant">
              <style xsi:type="style:WorkspaceImageDescription" showIcon="false" labelExpression="" labelAlignment="LEFT" sizeComputationExpression="5" arcWidth="1" arcHeight="1" workspacePath="/org.eclipse.sirius.sample.interactions.design/description/eol.png">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </borderedNodeMappings>
            <borderedNodeMappings xsi:type="description_4:EndOfLifeMapping" name="redimEOL" preconditionExpression="aql:self.eContainerOrSelf(interactions::Interaction).messages->filter(interactions::DestroyParticipantMessage).receivingEnd->select( e | e.context = self)->size()=0" semanticCandidatesExpression="var:self" semanticElements="var:self" domainClass="interactions.Participant">
              <style xsi:type="style:DotDescription" labelExpression="" labelAlignment="LEFT" sizeComputationExpression="1" strokeSizeComputationExpression="1">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </borderedNodeMappings>
            <style xsi:type="style:SquareDescription" borderSizeComputationExpression="3" showIcon="false" labelExpression="" labelAlignment="LEFT" resizeKind="NSEW" width="1" height="40">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </borderedNodeMappings>
          <style xsi:type="style:SquareDescription" labelSize="12" showIcon="false" labelExpression="[name + ' : ' + type.name/]" sizeComputationExpression="" labelPosition="node" resizeKind="NSEW" width="12" height="5">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
          </style>
        </nodeMappings>
        <edgeMappings xsi:type="description_4:BasicMessageMapping" name="Feature Access Message" deletionDescription="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='Delete%20Message']" labelDirectEdit="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='Edit%20Message']" semanticCandidatesExpression="aql:self.messages" semanticElements="ocl: Sequence{self,  self.sendingEnd, self.receivingEnd, let _ends : Sequence(AbstractEnd) =  Interaction.allInstances()->any(true).ends->asSequence()->select(e : AbstractEnd | e._context = self.sendingEnd._context) in let indexOfSendingEnd : Integer = _ends->indexOf(self.sendingEnd) in if (indexOfSendingEnd > 1) then let executionOnSource : Execution =  _ends->subSequence(1, indexOfSendingEnd-1)->select(ae : AbstractEnd | ae.oclIsKindOf(ExecutionEnd))->last().oclAsType(ExecutionEnd).execution in if executionOnSource.oclIsInvalid() then self.sendingEnd._context else executionOnSource endif else self.sendingEnd._context endif, let _ends : Sequence(AbstractEnd) =  Interaction.allInstances()->any(true).ends->asSequence()->select(e : AbstractEnd | e._context = self.recevingEnd._context) in let indexOfRecevingEnd : Integer = _ends->indexOf(self.recevingEnd) in if (indexOfRecevingEnd > 1) then let executionOnTarget : Execution =  _ends->subSequence(1, indexOfRecevingEnd-1)->select(ae : AbstractEnd | ae.oclIsKindOf(ExecutionEnd))->last().oclAsType(ExecutionEnd).execution in if executionOnTarget.oclIsInvalid() then self.RecevingEnd._context else executionOnTarget endif else self.recevingEnd._context endif}" sourceMapping="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline']/@borderedNodeMappings[name='Execution']" targetMapping="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline']/@borderedNodeMappings[name='Execution']" targetFinderExpression="ocl : let _ends : Sequence(AbstractEnd) =  Interaction.allInstances()->any(true).ends->asSequence()->select(e : AbstractEnd | e._context = self.recevingEnd._context) in let indexOfRecevingEnd : Integer = _ends->indexOf(self.recevingEnd) in if (indexOfRecevingEnd > 1) then let executionOnTarget : Execution =  _ends->subSequence(1, indexOfRecevingEnd-1)->select(ae : AbstractEnd | ae.oclIsKindOf(ExecutionEnd))->last().oclAsType(ExecutionEnd).execution in if executionOnTarget.oclIsInvalid() then self.RecevingEnd._context else executionOnTarget endif else self.recevingEnd._context endif" sourceFinderExpression="ocl: let _ends : Sequence(AbstractEnd) =  Interaction.allInstances()->any(true).ends->asSequence()->select(e : AbstractEnd | e._context = self.sendingEnd._context) in let indexOfSendingEnd : Integer = _ends->indexOf(self.sendingEnd) in if (indexOfSendingEnd > 1) then let executionOnSource : Execution =  _ends->subSequence(1, indexOfSendingEnd-1)->select(ae : AbstractEnd | ae.oclIsKindOf(ExecutionEnd))->last().oclAsType(ExecutionEnd).execution in if executionOnSource.oclIsInvalid() then self.sendingEnd._context else executionOnSource endif else self.sendingEnd._context endif" domainClass="interactions.FeatureAccessMessage" useDomainElement="true" sendingEndFinderExpression="[sendingEnd/]" receivingEndFinderExpression="aql:self.receivingEnd">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_green']"/>
            <centerLabelStyleDescription showIcon="false" labelExpression="aql:self.name + ' (read ' + self.getReceivingContext().currentParticipant().name + '.' + self.feature.name + ')'">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql:self.isWrite">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_orange']"/>
              <centerLabelStyleDescription showIcon="false" labelExpression="aql:self.name + ' (write ' + self.getReceivingContext().currentParticipant().name + '.' self.feature.name + ')'">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings xsi:type="description_4:BasicMessageMapping" name="Call Message" deletionDescription="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='Delete%20Message']" labelDirectEdit="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='Edit%20Message']" semanticCandidatesExpression="aql:self.messages" semanticElements="ocl: Sequence{self,  self.sendingEnd, self.receivingEnd, let _ends : Sequence(AbstractEnd) =  Interaction.allInstances()->any(true).ends->asSequence()->select(e : AbstractEnd | e._context = self.sendingEnd._context) in let indexOfSendingEnd : Integer = _ends->indexOf(self.sendingEnd) in if (indexOfSendingEnd > 1) then let executionOnSource : Execution =  _ends->subSequence(1, indexOfSendingEnd-1)->select(ae : AbstractEnd | ae.oclIsKindOf(ExecutionEnd))->last().oclAsType(ExecutionEnd).execution in if executionOnSource.oclIsInvalid() then self.sendingEnd._context else executionOnSource endif else self.sendingEnd._context endif, let _ends : Sequence(AbstractEnd) =  Interaction.allInstances()->any(true).ends->asSequence()->select(e : AbstractEnd | e._context = self.recevingEnd._context) in let indexOfRecevingEnd : Integer = _ends->indexOf(self.recevingEnd) in if (indexOfRecevingEnd > 1) then let executionOnTarget : Execution =  _ends->subSequence(1, indexOfRecevingEnd-1)->select(ae : AbstractEnd | ae.oclIsKindOf(ExecutionEnd))->last().oclAsType(ExecutionEnd).execution in if executionOnTarget.oclIsInvalid() then self.RecevingEnd._context else executionOnTarget endif else self.recevingEnd._context endif}" sourceMapping="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline']/@borderedNodeMappings[name='Execution']" targetMapping="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline']/@borderedNodeMappings[name='Execution'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline']" targetFinderExpression="ocl: let _ends : Sequence(AbstractEnd) =  Interaction.allInstances()->any(true).ends->asSequence()->select(e : AbstractEnd | e._context = self.recevingEnd._context) in let indexOfRecevingEnd : Integer = _ends->indexOf(self.recevingEnd) in if (indexOfRecevingEnd > 1) then let executionOnTarget : Execution =  _ends->subSequence(1, indexOfRecevingEnd-1)->select(ae : AbstractEnd | ae.oclIsKindOf(ExecutionEnd))->last().oclAsType(ExecutionEnd).execution in if executionOnTarget.oclIsInvalid() then self.RecevingEnd._context else executionOnTarget endif else self.recevingEnd._context endif" sourceFinderExpression="ocl: let _ends : Sequence(AbstractEnd) =  Interaction.allInstances()->any(true).ends->asSequence()->select(e : AbstractEnd | e._context = self.sendingEnd._context) in let indexOfSendingEnd : Integer = _ends->indexOf(self.sendingEnd) in if (indexOfSendingEnd > 1) then let executionOnSource : Execution =  _ends->subSequence(1, indexOfSendingEnd-1)->select(ae : AbstractEnd | ae.oclIsKindOf(ExecutionEnd))->last().oclAsType(ExecutionEnd).execution in if executionOnSource.oclIsInvalid() then self.sendingEnd._context else executionOnSource endif else self.sendingEnd._context endif" domainClass="interactions.CallMessage" useDomainElement="true" sendingEndFinderExpression="aql:self.sendingEnd" receivingEndFinderExpression="aql:self.receivingEnd">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            <centerLabelStyleDescription showIcon="false" labelExpression="aql:self.name + ' (call ' + self.getReceivingContext().currentParticipant().name + '.' + self.operation.name + ')'">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings xsi:type="description_4:CreationMessageMapping" name="Create Participant Message" deletionDescription="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='Delete%20Message']" labelDirectEdit="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='Edit%20Message']" semanticCandidatesExpression="aql:self.messages" semanticElements="ocl: Sequence{self, self.sendingEnd, self.receivingEnd, let _ends : Sequence(AbstractEnd) =  Interaction.allInstances()->any(true).ends->asSequence()->select(e : AbstractEnd | e._context = self.sendingEnd._context) in let indexOfSendingEnd : Integer = _ends->indexOf(self.sendingEnd) in if (indexOfSendingEnd > 1) then let executionOnSource : Execution =  _ends->subSequence(1, indexOfSendingEnd-1)->select(ae : AbstractEnd | ae.oclIsKindOf(ExecutionEnd))->last().oclAsType(ExecutionEnd).execution in if executionOnSource.oclIsInvalid() then self.sendingEnd._context else executionOnSource endif else self.sendingEnd._context endif, let _ends : Sequence(AbstractEnd) =  Interaction.allInstances()->any(true).ends->asSequence()->select(e : AbstractEnd | e._context = self.receivingEnd._context) in let indexOfReceivingEnd : Integer = _ends->indexOf(self.receivingEnd) in if (indexOfReceivingEnd > 1) then let executionOnTarget : Execution =  _ends->subSequence(1, indexOfReceivingEnd-1)->select(ae : AbstractEnd | ae.oclIsKindOf(ExecutionEnd))->last().oclAsType(ExecutionEnd).execution in if executionOnTarget.oclIsInvalid() then self.receivingEnd._context else executionOnTarget endif else self.receivingEnd._context endif}" sourceMapping="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline']/@borderedNodeMappings[name='Execution']" targetMapping="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='Participant']" targetFinderExpression="ocl: let _ends : Sequence(AbstractEnd) =  Interaction.allInstances()->any(true).ends->asSequence()->select(e : AbstractEnd | e._context = self.receivingEnd._context) in let indexOfReceivingEnd : Integer = _ends->indexOf(self.receivingEnd) in if (indexOfReceivingEnd > 1) then let executionOnTarget : Execution =  _ends->subSequence(1, indexOfReceivingEnd-1)->select(ae : AbstractEnd | ae.oclIsKindOf(ExecutionEnd))->last().oclAsType(ExecutionEnd).execution in if executionOnTarget.oclIsInvalid() then self.receivingEnd._context else executionOnTarget endif else self.receivingEnd._context endif" sourceFinderExpression="ocl: let _ends : Sequence(AbstractEnd) =  Interaction.allInstances()->any(true).ends->asSequence()->select(e : AbstractEnd | e._context = self.sendingEnd._context) in let indexOfSendingEnd : Integer = _ends->indexOf(self.sendingEnd) in if (indexOfSendingEnd > 1) then let executionOnSource : Execution =  _ends->subSequence(1, indexOfSendingEnd-1)->select(ae : AbstractEnd | ae.oclIsKindOf(ExecutionEnd))->last().oclAsType(ExecutionEnd).execution in if executionOnSource.oclIsInvalid() then self.sendingEnd._context else executionOnSource endif else self.sendingEnd._context endif" domainClass="interactions.CreateParticipantMessage" useDomainElement="true" sendingEndFinderExpression="aql:self.sendingEnd" receivingEndFinderExpression="aql:self.receivingEnd">
          <style lineStyle="dash" targetArrow="InputFillClosedArrow" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
            <centerLabelStyleDescription showIcon="false" labelExpression="aql:self.name + ' (new ' + self.receivingEnd.context.name + ')'">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings xsi:type="description_4:DestructionMessageMapping" name="Destroy Participant Message" deletionDescription="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='Delete%20Message']" labelDirectEdit="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='Edit%20Message']" semanticCandidatesExpression="aql:self.messages" semanticElements="ocl: Sequence{self,  self.sendingEnd, self.receivingEnd, let _ends : Sequence(AbstractEnd) =  Interaction.allInstances()->any(true).ends->asSequence()->select(e : AbstractEnd | e._context = self.sendingEnd._context) in let indexOfSendingEnd : Integer = _ends->indexOf(self.sendingEnd) in if (indexOfSendingEnd > 1) then let executionOnSource : Execution =  _ends->subSequence(1, indexOfSendingEnd-1)->select(ae : AbstractEnd | ae.oclIsKindOf(ExecutionEnd))->last().oclAsType(ExecutionEnd).execution in if executionOnSource.oclIsInvalid() then self.sendingEnd._context else executionOnSource endif else self.sendingEnd._context endif, let _ends : Sequence(AbstractEnd) =  Interaction.allInstances()->any(true).ends->asSequence()->select(e : AbstractEnd | e._context = self.recevingEnd._context) in let indexOfRecevingEnd : Integer = _ends->indexOf(self.recevingEnd) in if (indexOfRecevingEnd > 1) then let executionOnTarget : Execution =  _ends->subSequence(1, indexOfRecevingEnd-1)->select(ae : AbstractEnd | ae.oclIsKindOf(ExecutionEnd))->last().oclAsType(ExecutionEnd).execution in if executionOnTarget.oclIsInvalid() then self.RecevingEnd._context else executionOnTarget endif else self.recevingEnd._context endif}" sourceMapping="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline']/@borderedNodeMappings[name='Execution']" targetMapping="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline']/@borderedNodeMappings[name='EOL']" targetFinderExpression="ocl: let _ends : Sequence(AbstractEnd) =  Interaction.allInstances()->any(true).ends->asSequence()->select(e : AbstractEnd | e._context = self.recevingEnd._context) in let indexOfRecevingEnd : Integer = _ends->indexOf(self.recevingEnd) in if (indexOfRecevingEnd > 1) then let executionOnTarget : Execution =  _ends->subSequence(1, indexOfRecevingEnd-1)->select(ae : AbstractEnd | ae.oclIsKindOf(ExecutionEnd))->last().oclAsType(ExecutionEnd).execution in if executionOnTarget.oclIsInvalid() then self.RecevingEnd._context else executionOnTarget endif else self.recevingEnd._context endif" sourceFinderExpression="ocl: let _ends : Sequence(AbstractEnd) =  Interaction.allInstances()->any(true).ends->asSequence()->select(e : AbstractEnd | e._context = self.sendingEnd._context) in let indexOfSendingEnd : Integer = _ends->indexOf(self.sendingEnd) in if (indexOfSendingEnd > 1) then let executionOnSource : Execution =  _ends->subSequence(1, indexOfSendingEnd-1)->select(ae : AbstractEnd | ae.oclIsKindOf(ExecutionEnd))->last().oclAsType(ExecutionEnd).execution in if executionOnSource.oclIsInvalid() then self.sendingEnd._context else executionOnSource endif else self.sendingEnd._context endif" domainClass="interactions.DestroyParticipantMessage" useDomainElement="true" sendingEndFinderExpression="aql:self.sendingEnd" receivingEndFinderExpression="aql:self.receivingEnd">
          <style lineStyle="dash" targetArrow="InputFillClosedArrow" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_red']"/>
            <centerLabelStyleDescription showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings xsi:type="description_4:ReturnMessageMapping" name="Return Message" deletionDescription="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='Delete%20Message']" semanticCandidatesExpression="aql:self.messages" semanticElements="ocl: Sequence{self,  self.sendingEnd, self.receivingEnd, let _ends : Sequence(AbstractEnd) =  Interaction.allInstances()->any(true).ends->asSequence()->select(e : AbstractEnd | e._context = self.sendingEnd._context) in let indexOfSendingEnd : Integer = _ends->indexOf(self.sendingEnd) in if (indexOfSendingEnd > 1) then let executionOnSource : Execution =  _ends->subSequence(1, indexOfSendingEnd-1)->select(ae : AbstractEnd | ae.oclIsKindOf(ExecutionEnd))->last().oclAsType(ExecutionEnd).execution in if executionOnSource.oclIsInvalid() then self.sendingEnd._context else executionOnSource endif else self.sendingEnd._context endif, let _ends : Sequence(AbstractEnd) =  Interaction.allInstances()->any(true).ends->asSequence()->select(e : AbstractEnd | e._context = self.recevingEnd._context) in let indexOfRecevingEnd : Integer = _ends->indexOf(self.recevingEnd) in if (indexOfRecevingEnd > 1) then let executionOnTarget : Execution =  _ends->subSequence(1, indexOfRecevingEnd-1)->select(ae : AbstractEnd | ae.oclIsKindOf(ExecutionEnd))->last().oclAsType(ExecutionEnd).execution in if executionOnTarget.oclIsInvalid() then self.RecevingEnd._context else executionOnTarget endif else self.recevingEnd._context endif}" sourceMapping="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline']/@borderedNodeMappings[name='Execution']" targetMapping="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline']/@borderedNodeMappings[name='Execution']" targetFinderExpression="ocl: let _ends : Sequence(AbstractEnd) =  Interaction.allInstances()->any(true).ends->asSequence()->select(e : AbstractEnd | e._context = self.recevingEnd._context) in let indexOfRecevingEnd : Integer = _ends->indexOf(self.recevingEnd) in if (indexOfRecevingEnd > 1) then let executionOnTarget : Execution =  _ends->subSequence(1, indexOfRecevingEnd-1)->select(ae : AbstractEnd | ae.oclIsKindOf(ExecutionEnd))->last().oclAsType(ExecutionEnd).execution in if executionOnTarget.oclIsInvalid() then self.RecevingEnd._context else executionOnTarget endif else self.recevingEnd._context endif" sourceFinderExpression="ocl: let _ends : Sequence(AbstractEnd) =  Interaction.allInstances()->any(true).ends->asSequence()->select(e : AbstractEnd | e._context = self.sendingEnd._context) in let indexOfSendingEnd : Integer = _ends->indexOf(self.sendingEnd) in if (indexOfSendingEnd > 1) then let executionOnSource : Execution =  _ends->subSequence(1, indexOfSendingEnd-1)->select(ae : AbstractEnd | ae.oclIsKindOf(ExecutionEnd))->last().oclAsType(ExecutionEnd).execution in if executionOnSource.oclIsInvalid() then self.sendingEnd._context else executionOnSource endif else self.sendingEnd._context endif" domainClass="interactions.ReturnMessage" useDomainElement="true" sendingEndFinderExpression="aql:self.sendingEnd" receivingEndFinderExpression="aql:self.receivingEnd" invocationMessageFinderExpression="aql:self.invocationMessage">
          <style lineStyle="dot" sizeComputationExpression="aql:self.eContents()->size()">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            <centerLabelStyleDescription showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings xsi:type="description_4:InteractionUseMapping" name="Interaction Use" preconditionExpression="aql:self.coveredParticipants->size()" deletionDescription="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='Delete%20Interaction%20Use']" labelDirectEdit="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='Edit%20IU%20Label']" semanticCandidatesExpression="feature:eAllContents" semanticElements="aql:Sequence{self} + Sequence{self.interaction}" domainClass="interactions.InteractionUse" startingEndFinderExpression="aql:self.startingEnd" finishingEndFinderExpression="aql:self.finish" coveredLifelinesExpression="aql:self.coveredParticipants" centerLabelExpression="aql:'call(' + self.interaction.name + ')'">
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" labelExpression="aql:self.type" labelAlignment="LEFT">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.0"/>
          </style>
        </containerMappings>
        <containerMappings xsi:type="description_4:CombinedFragmentMapping" name="Combined Fragment" preconditionExpression="aql:self.coveredParticipants->size()" deletionDescription="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.4/@ownedTools[name='Delete%20Combined%20Fragment']" labelDirectEdit="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.4/@ownedTools[name='Edit%20Combined%20Fragment']" semanticCandidatesExpression="feature:eAllContents" semanticElements="aql:self" domainClass="interactions.CombinedFragment" startingEndFinderExpression="aql:self.start" finishingEndFinderExpression="aql:self.finish" coveredLifelinesExpression="aql:self.coveredParticipants">
          <subContainerMappings xsi:type="description_4:OperandMapping" name="Operand" deletionDescription="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.4/@subSections[name='Operands']/@ownedTools[name='Delete%20Operand']" labelDirectEdit="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.4/@subSections[name='Operands']/@ownedTools[name='Edit%20Operand']" semanticCandidatesExpression="aql:self.ownedOperands" semanticElements="var:self" domainClass="interactions.Operand" startingEndFinderExpression="aql:self.start" finishingEndFinderExpression="ocl : let _ends : Sequence(AbstractEnd) =  Interaction.allInstances()->any(true).ends->asSequence()->select(e : AbstractEnd | e.oclIsKindOf(OperandEnd) or e.oclIsKindOf(CombinedFragmentEnd)) in let indexOfOperandEnd : Integer = _ends->indexOf(self.start) in let nextEnd : AbstractEnd = _ends->subSequence(indexOfOperandEnd+1, _ends->size())->first() in nextEnd">
            <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" showIcon="false" labelExpression="[aql:self.name]" labelAlignment="LEFT" backgroundStyle="GradientTopToBottom">
              <borderColor xsi:type="description:UserFixedColor" href="sequenceDiagram.odesign#//@userColorsPalettes[name='Dutch%20Seas']/@entries[name='Dutch%20teal']"/>
              <labelColor xsi:type="description:UserFixedColor" href="sequenceDiagram.odesign#//@userColorsPalettes[name='Skyblue']/@entries[name='Evening_Skyblue']"/>
              <backgroundColor xsi:type="description:UserFixedColor" href="sequenceDiagram.odesign#//@userColorsPalettes[name='Dutch%20Seas']/@entries[name='Paleolitico']"/>
              <foregroundColor xsi:type="description:UserFixedColor" href="sequenceDiagram.odesign#//@userColorsPalettes[name='Dutch%20Seas']/@entries[name='Paleolitico']"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" showIcon="false" labelExpression="aql:self.operator" labelAlignment="LEFT">
            <borderColor xsi:type="description:UserFixedColor" href="sequenceDiagram.odesign#//@userColorsPalettes[name='Dutch%20Seas']/@entries[name='Dutch%20teal']"/>
            <labelColor xsi:type="description:UserFixedColor" href="sequenceDiagram.odesign#//@userColorsPalettes[name='Skyblue']/@entries[name='Evening_Skyblue']"/>
            <backgroundColor xsi:type="description:InterpolatedColor" href="sequenceDiagram.odesign#//@userColorsPalettes[name='Greens']/@entries[name='Interpolated%20green%20for%20Combined%20Fragments']"/>
            <foregroundColor xsi:type="description:InterpolatedColor" href="sequenceDiagram.odesign#//@userColorsPalettes[name='Greens']/@entries[name='Interpolated%20green%20for%20Combined%20Fragments']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.0"/>
          </style>
        </containerMappings>
        <toolSections name="Participants">
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="Participant" nodeMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='Participant']">
            <variable name="containerBis"/>
            <viewVariable name="containerViewBis"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.Participant" referenceName="participants">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'newParticipant' + self.eContainerOrSelf(interactions::Interaction).participants->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DirectEditLabel" name="Edit Participant">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="var:arg0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DeleteElementDescription" name="Delete EndOfLife">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Executions">
          <ownedTools xsi:type="tool_2:ExecutionCreationTool" name="Execution" nodeMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline']/@borderedNodeMappings[name='Execution']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eContainerOrSelf(interactions::Interaction)">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.Execution" referenceName="executions" variableName="newExecution">
                    <subModelOperations xsi:type="tool:SetValue" featureName="owner" valueExpression="ocl: if $container.oclIsTypeOf(Participant) then $container else if  $container.oclIsTypeOf(Execution) then $container.oclAsType(Execution).owner else null endif endif"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.ExecutionEnd" referenceName="ends" variableName="startingEnd">
                    <subModelOperations xsi:type="tool:SetValue" featureName="execution" valueExpression="var:newExecution"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="context" valueExpression="aql:newExecution.owner"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.ExecutionEnd" referenceName="ends" variableName="finishingEnd">
                    <subModelOperations xsi:type="tool:SetValue" featureName="execution" valueExpression="var:newExecution"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="context" valueExpression="aql:newExecution.owner"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newExecution">
                    <subModelOperations xsi:type="tool:SetValue" featureName="start" valueExpression="var:startingEnd"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="end" valueExpression="var:finishingEnd"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move finishingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="var:self"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="var:finishingEnd"/>
                    <parameters name="predecessor" value="aql:finishingEndPredecessor.semanticEnd"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move startingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="var:self"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="var:startingEnd"/>
                    <parameters name="predecessor" value="aql:startingEndPredecessor.semanticEnd"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newExecution">
                    <subModelOperations xsi:type="tool:ExternalJavaActionCall" name="Adjust new execution position" action="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.6/@ownedTools[name='Reorder%20Executions%2C%20States%20Messages%2C%20InteractionUses']/@onEventMovedOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.2"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'e' + self.eContainerOrSelf(interactions::Interaction).executions->size()"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:startingEnd">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'start_'+self.execution.name"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:finishingEnd">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'finish_' + self.execution.name"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DeleteElementDescription" name="Delete Execution">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.start">
                  <subModelOperations xsi:type="tool:If" conditionExpression="aql:not self.oclIsKindOf(interactions::MixEnd) or (self.oclIsKindOf(interactions::MixEnd) and self.message = null)">
                    <subModelOperations xsi:type="tool:RemoveElement"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.end">
                  <subModelOperations xsi:type="tool:If" conditionExpression="aql:not self.oclIsKindOf(interactions::MixEnd) or (self.oclIsKindOf(interactions::MixEnd) and self.message = null)">
                    <subModelOperations xsi:type="tool:RemoveElement"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Messages">
          <ownedTools xsi:type="tool_2:MessageCreationTool" name="Create" edgeMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@edgeMappings[name='Create%20Participant%20Message']" extraTargetMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:source.eContainerOrSelf(interactions::Interaction)">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.CreateParticipantMessage" referenceName="messages" variableName="newMessage"/>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.MessageEnd" referenceName="ends" variableName="sendingEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="message" valueExpression="var:newMessage"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="context" valueExpression="ocl: if $source.oclIsTypeOf(Participant) then $source else if  $source.oclIsTypeOf(Execution) then $source.oclAsType(Execution).owner else null endif endif"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.MessageEnd" referenceName="ends" variableName="receivingEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="message" valueExpression="var:newMessage"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="context" valueExpression="ocl: if $source.oclIsTypeOf(Participant) then $source else if  $source.oclIsTypeOf(Execution) then $source.oclAsType(Execution).owner else null endif endif"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newMessage">
                  <subModelOperations xsi:type="tool:SetValue" featureName="sendingEnd" valueExpression="var:sendingEnd"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="receivingEnd" valueExpression="var:receivingEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move sendingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:sendingEnd"/>
                  <parameters name="predecessor" value="aql:startingEndPredecessor.semanticEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move receivingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:receivingEnd"/>
                  <parameters name="predecessor" value="aql:newMessage.sendingEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newMessage">
                  <subModelOperations xsi:type="tool:ExternalJavaActionCall" name="Adjust new call message position" action="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.6/@ownedTools[name='Reorder%20Executions%2C%20States%20Messages%2C%20InteractionUses']/@onEventMovedOperation/@firstModelOperations/@subModelOperations.2/@subModelOperations.2"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'m_create' + self.eContainerOrSelf(interactions::Interaction).messages->size()"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:sendingEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'send_'+ self.message.name"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:receivingEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'receive_' + self.message.name"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
          </ownedTools>
          <ownedTools xsi:type="tool_2:MessageCreationTool" name="Read" edgeMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@edgeMappings[name='Feature%20Access%20Message']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:source.eContainerOrSelf(interactions::Interaction)">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.FeatureAccessMessage" referenceName="messages" variableName="newMessage"/>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.MessageEnd" referenceName="ends" variableName="sendingEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="message" valueExpression="var:newMessage"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="context" valueExpression="ocl: if $source.oclIsTypeOf(Participant) then $source else if  $source.oclIsTypeOf(Execution) then $source.oclAsType(Execution).owner else null endif endif"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.MessageEnd" referenceName="ends" variableName="receivingEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="message" valueExpression="var:newMessage"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="context" valueExpression="ocl: if $source.oclIsTypeOf(Participant) then $source else if  $source.oclIsTypeOf(Execution) then $source.oclAsType(Execution).owner else null endif endif"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newMessage">
                  <subModelOperations xsi:type="tool:SetValue" featureName="sendingEnd" valueExpression="var:sendingEnd"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="receivingEnd" valueExpression="var:receivingEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move receivingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:receivingEnd"/>
                  <parameters name="predecessor" value="aql:finishingEndPredecessor.semanticEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move sendingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:sendingEnd"/>
                  <parameters name="predecessor" value="aql:startingEndPredecessor.semanticEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newMessage">
                  <subModelOperations xsi:type="tool:ExternalJavaActionCall" name="Adjust new read message position" action="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.6/@ownedTools[name='Reorder%20Executions%2C%20States%20Messages%2C%20InteractionUses']/@onEventMovedOperation/@firstModelOperations/@subModelOperations.2/@subModelOperations.2"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'m' + self.eContainerOrSelf(interactions::Interaction).messages->size()"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:sendingEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'send_'+ self.message.name"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:receivingEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'receive_' + self.message.name"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
          </ownedTools>
          <ownedTools xsi:type="tool_2:MessageCreationTool" name="Write" edgeMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@edgeMappings[name='Feature%20Access%20Message']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:source.eContainerOrSelf(interactions::Interaction)">
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Show variables" id="org.eclipse.sirius.business.api.action.printVariables">
                  <parameters name="title" value="Write Feature Message Creation"/>
                  <parameters name="enabled" value="aql:false"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.FeatureAccessMessage" referenceName="messages" variableName="newMessage">
                  <subModelOperations xsi:type="tool:SetValue" featureName="isWrite" valueExpression="aql:true"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.MessageEnd" referenceName="ends" variableName="sendingEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="message" valueExpression="var:newMessage"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="context" valueExpression="ocl: if $source.oclIsTypeOf(Participant) then $source else if  $source.oclIsTypeOf(Execution) then $source.oclAsType(Execution).owner else null endif endif"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.MessageEnd" referenceName="ends" variableName="receivingEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="message" valueExpression="var:newMessage"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="context" valueExpression="ocl: if $source.oclIsTypeOf(Participant) then $source else if  $source.oclIsTypeOf(Execution) then $source.oclAsType(Execution).owner else null endif endif"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newMessage">
                  <subModelOperations xsi:type="tool:SetValue" featureName="sendingEnd" valueExpression="var:sendingEnd"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="receivingEnd" valueExpression="var:receivingEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move receivingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:receivingEnd"/>
                  <parameters name="predecessor" value="aql:finishingEndPredecessor.semanticEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move sendingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:sendingEnd"/>
                  <parameters name="predecessor" value="aql:startingEndPredecessor.semanticEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newMessage">
                  <subModelOperations xsi:type="tool:ExternalJavaActionCall" name="Adjust new write message position" action="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.6/@ownedTools[name='Reorder%20Executions%2C%20States%20Messages%2C%20InteractionUses']/@onEventMovedOperation/@firstModelOperations/@subModelOperations.2/@subModelOperations.2"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'m' + self.eContainerOrSelf(interactions::Interaction).messages->size()"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:sendingEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'send_'+ self.message.name"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:receivingEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'receive_' + self.message.name"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
          </ownedTools>
          <ownedTools xsi:type="tool_2:MessageCreationTool" name="Call" edgeMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@edgeMappings[name='Call%20Message']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:source.eContainerOrSelf(interactions::Interaction)">
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Show variables" id="org.eclipse.sirius.business.api.action.printVariables">
                  <parameters name="title" value="Call Message Creation"/>
                  <parameters name="enabled" value="aql:false"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.CallMessage" referenceName="messages" variableName="newMessage"/>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.MessageEnd" referenceName="ends" variableName="sendingEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="message" valueExpression="var:newMessage"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="context" valueExpression="ocl: if $source.oclIsTypeOf(Participant) then $source else if  $source.oclIsTypeOf(Execution) then $source.oclAsType(Execution).owner else null endif endif"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.MessageEnd" referenceName="ends" variableName="receivingEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="message" valueExpression="var:newMessage"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="context" valueExpression="ocl: if $source.oclIsTypeOf(Participant) then $source else if  $source.oclIsTypeOf(Execution) then $source.oclAsType(Execution).owner else null endif endif"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newMessage">
                  <subModelOperations xsi:type="tool:SetValue" featureName="sendingEnd" valueExpression="var:sendingEnd"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="receivingEnd" valueExpression="var:receivingEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move receivingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:receivingEnd"/>
                  <parameters name="predecessor" value="aql:finishingEndPredecessor.semanticEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move sendingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:sendingEnd"/>
                  <parameters name="predecessor" value="aql:startingEndPredecessor.semanticEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newMessage">
                  <subModelOperations xsi:type="tool:ExternalJavaActionCall" name="Adjust new call message position" action="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.6/@ownedTools[name='Reorder%20Executions%2C%20States%20Messages%2C%20InteractionUses']/@onEventMovedOperation/@firstModelOperations/@subModelOperations.2/@subModelOperations.2"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'m' + self.eContainerOrSelf(interactions::Interaction).messages->size()"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:sendingEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'send_'+ self.message.name"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:receivingEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'receive_' + self.message.name"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
          </ownedTools>
          <ownedTools xsi:type="tool_2:MessageCreationTool" name="Return" edgeMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@edgeMappings[name='Return%20Message']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:source.eContainerOrSelf(interactions::Interaction)">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.ReturnMessage" referenceName="messages" variableName="newMessage"/>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.MessageEnd" referenceName="ends" variableName="sendingEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="message" valueExpression="var:newMessage"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="context" valueExpression="ocl: if $source.oclIsTypeOf(Participant) then $source else if  $source.oclIsTypeOf(Execution) then $source.oclAsType(Execution).owner else null endif endif"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.MessageEnd" referenceName="ends" variableName="receivingEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="message" valueExpression="var:newMessage"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="context" valueExpression="ocl: if $source.oclIsTypeOf(Participant) then $source else if  $source.oclIsTypeOf(Execution) then $source.oclAsType(Execution).owner else null endif endif"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newMessage">
                  <subModelOperations xsi:type="tool:SetValue" featureName="sendingEnd" valueExpression="var:sendingEnd"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="receivingEnd" valueExpression="var:receivingEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move receivingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:receivingEnd"/>
                  <parameters name="predecessor" value="aql:finishingEndPredecessor.semanticEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move sendingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:sendingEnd"/>
                  <parameters name="predecessor" value="aql:startingEndPredecessor.semanticEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newMessage">
                  <subModelOperations xsi:type="tool:ExternalJavaActionCall" name="Adjust new return message position" action="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.6/@ownedTools[name='Reorder%20Executions%2C%20States%20Messages%2C%20InteractionUses']/@onEventMovedOperation/@firstModelOperations/@subModelOperations.2/@subModelOperations.2"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'m_return' + self.eContainerOrSelf(interactions::Interaction).messages->size()"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:sendingEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'send_'+ self.message.name"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:receivingEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'receive_' + self.message.name"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DirectEditLabel" name="Edit Message">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="var:arg0"/>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.sendingEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'send_' + arg0"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.receivingEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'receive_' + arg0"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DeleteElementDescription" name="Delete Message">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.sendingEnd">
                  <subModelOperations xsi:type="tool:If" conditionExpression="aql:not self.oclIsKindOf(interactions::MixEnd) or (self.oclIsKindOf(interactions::MixEnd) and self.execution = null)">
                    <subModelOperations xsi:type="tool:RemoveElement"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.receivingEnd">
                  <subModelOperations xsi:type="tool:If" conditionExpression="aql:not self.oclIsKindOf(interactions::MixEnd) or (self.oclIsKindOf(interactions::MixEnd) and self.execution = null)">
                    <subModelOperations xsi:type="tool:RemoveElement"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_2:MessageCreationTool" name="Sync Call" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@edgeMappings[name='Call%20Message']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:source.eContainerOrSelf(interactions::Interaction)">
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Show variables" id="org.eclipse.sirius.business.api.action.printVariables">
                  <parameters name="title" value="Call Message Creation"/>
                  <parameters name="enabled" value="aql:false"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.CallMessage" referenceName="messages" variableName="callMsg"/>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:callMsg">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'m' + self.eContainerOrSelf(interactions::Interaction).messages->size()"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.Execution" referenceName="executions" variableName="newExecution">
                  <subModelOperations xsi:type="tool:SetValue" featureName="owner" valueExpression="ocl: if $source.oclIsTypeOf(Participant) then $source else if  $source.oclIsTypeOf(Execution) then $source.oclAsType(Execution).owner else null endif endif"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newExecution">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'e' + self.eContainerOrSelf(interactions::Interaction).executions->size()"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.ReturnMessage" referenceName="messages" variableName="returnMsg">
                  <subModelOperations xsi:type="tool:SetValue" featureName="invocationMessage" valueExpression="var:callMsg"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:returnMsg">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'m_return' + self.eContainerOrSelf(interactions::Interaction).messages->size()"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.MessageEnd" referenceName="ends" variableName="sendingEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="context" valueExpression="ocl: if $source.oclIsTypeOf(Participant) then $source else if  $source.oclIsTypeOf(Execution) then $source.oclAsType(Execution).owner else null endif endif"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="message" valueExpression="var:callMsg"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'send_'+ self.message.name"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.MixEnd" referenceName="ends" variableName="startExec">
                  <subModelOperations xsi:type="tool:SetValue" featureName="context" valueExpression="ocl: if $source.oclIsTypeOf(Participant) then $source else if  $source.oclIsTypeOf(Execution) then $source.oclAsType(Execution).owner else null endif endif"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="execution" valueExpression="var:newExecution"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="message" valueExpression="var:callMsg"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'start_'+self.execution.name"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.MixEnd" referenceName="ends" variableName="endExec">
                  <subModelOperations xsi:type="tool:SetValue" featureName="context" valueExpression="ocl: if $source.oclIsTypeOf(Participant) then $source else if  $source.oclIsTypeOf(Execution) then $source.oclAsType(Execution).owner else null endif endif"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="execution" valueExpression="var:newExecution"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="message" valueExpression="var:returnMsg"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'finish_' + self.execution.name"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.MessageEnd" referenceName="ends" variableName="receivingEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="context" valueExpression="ocl: if $source.oclIsTypeOf(Participant) then $source else if  $source.oclIsTypeOf(Execution) then $source.oclAsType(Execution).owner else null endif endif"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="message" valueExpression="var:returnMsg"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'receive_' + self.message.name"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:callMsg">
                  <subModelOperations xsi:type="tool:SetValue" featureName="sendingEnd" valueExpression="var:sendingEnd"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="receivingEnd" valueExpression="var:startExec"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newExecution">
                  <subModelOperations xsi:type="tool:SetValue" featureName="start" valueExpression="var:startExec"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="end" valueExpression="var:endExec"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:returnMsg">
                  <subModelOperations xsi:type="tool:SetValue" featureName="sendingEnd" valueExpression="var:endExec"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="receivingEnd" valueExpression="var:receivingEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move startExec" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:startExec"/>
                  <parameters name="predecessor" value="aql:finishingEndPredecessor.semanticEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move sendingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:sendingEnd"/>
                  <parameters name="predecessor" value="aql:startingEndPredecessor.semanticEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move endExec" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:endExec"/>
                  <parameters name="predecessor" value="var:startExec"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move receivingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:receivingEnd"/>
                  <parameters name="predecessor" value="var:endExec"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:callMsg">
                  <subModelOperations xsi:type="tool:ExternalJavaActionCall" name="Adjust new call message position" action="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.6/@ownedTools[name='Reorder%20Executions%2C%20States%20Messages%2C%20InteractionUses']/@onEventMovedOperation/@firstModelOperations/@subModelOperations.2/@subModelOperations.2"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newExecution">
                  <subModelOperations xsi:type="tool:ExternalJavaActionCall" name="Adjust new execution position" action="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.6/@ownedTools[name='Reorder%20Executions%2C%20States%20Messages%2C%20InteractionUses']/@onEventMovedOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.2"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:returnMsg">
                  <subModelOperations xsi:type="tool:ExternalJavaActionCall" name="Adjust new return message position" action="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.6/@ownedTools[name='Reorder%20Executions%2C%20States%20Messages%2C%20InteractionUses']/@onEventMovedOperation/@firstModelOperations/@subModelOperations.2/@subModelOperations.2"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
          </ownedTools>
          <ownedTools xsi:type="tool_2:MessageCreationTool" name="ASync Call" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@edgeMappings[name='Call%20Message']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:source.eContainerOrSelf(interactions::Interaction)">
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Show variables" id="org.eclipse.sirius.business.api.action.printVariables">
                  <parameters name="title" value="Call Message Creation"/>
                  <parameters name="enabled" value="aql:false"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.CallMessage" referenceName="messages" variableName="callMsg"/>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:callMsg">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'m' + self.eContainerOrSelf(interactions::Interaction).messages->size()"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.Execution" referenceName="executions" variableName="newExecution">
                  <subModelOperations xsi:type="tool:SetValue" featureName="owner" valueExpression="ocl: if $source.oclIsTypeOf(Participant) then $source else if  $source.oclIsTypeOf(Execution) then $source.oclAsType(Execution).owner else null endif endif"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newExecution">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'e' + self.eContainerOrSelf(interactions::Interaction).executions->size()"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.MessageEnd" referenceName="ends" variableName="sendingEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="context" valueExpression="ocl: if $source.oclIsTypeOf(Participant) then $source else if  $source.oclIsTypeOf(Execution) then $source.oclAsType(Execution).owner else null endif endif"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="message" valueExpression="var:callMsg"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'send_'+ self.message.name"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.MixEnd" referenceName="ends" variableName="startExec">
                  <subModelOperations xsi:type="tool:SetValue" featureName="context" valueExpression="ocl: if $source.oclIsTypeOf(Participant) then $source else if  $source.oclIsTypeOf(Execution) then $source.oclAsType(Execution).owner else null endif endif"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="execution" valueExpression="var:newExecution"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="message" valueExpression="var:callMsg"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'start_'+self.execution.name"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.ExecutionEnd" referenceName="ends" variableName="endExec">
                  <subModelOperations xsi:type="tool:SetValue" featureName="execution" valueExpression="var:newExecution"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="context" valueExpression="ocl: if $source.oclIsTypeOf(Participant) then $source else if  $source.oclIsTypeOf(Execution) then $source.oclAsType(Execution).owner else null endif endif"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:callMsg">
                  <subModelOperations xsi:type="tool:SetValue" featureName="sendingEnd" valueExpression="var:sendingEnd"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="receivingEnd" valueExpression="var:startExec"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newExecution">
                  <subModelOperations xsi:type="tool:SetValue" featureName="start" valueExpression="var:startExec"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="end" valueExpression="var:endExec"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move startExec" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:startExec"/>
                  <parameters name="predecessor" value="aql:finishingEndPredecessor.semanticEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move sendingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:sendingEnd"/>
                  <parameters name="predecessor" value="aql:startingEndPredecessor.semanticEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move endExec" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:endExec"/>
                  <parameters name="predecessor" value="var:startExec"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:callMsg">
                  <subModelOperations xsi:type="tool:ExternalJavaActionCall" name="Adjust new call message position" action="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.6/@ownedTools[name='Reorder%20Executions%2C%20States%20Messages%2C%20InteractionUses']/@onEventMovedOperation/@firstModelOperations/@subModelOperations.2/@subModelOperations.2"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newExecution">
                  <subModelOperations xsi:type="tool:ExternalJavaActionCall" name="Adjust new execution position" action="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.6/@ownedTools[name='Reorder%20Executions%2C%20States%20Messages%2C%20InteractionUses']/@onEventMovedOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.2"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
          </ownedTools>
          <ownedTools xsi:type="tool_2:MessageCreationTool" name="Destroy" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@edgeMappings[name='Destroy%20Participant%20Message']" extraTargetMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:source.eContainerOrSelf(interactions::Interaction)">
                <subModelOperations xsi:type="tool_1:CreateView" mapping="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline']/@borderedNodeMappings[name='EOL']" containerViewExpression="var:targetView"/>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.DestroyParticipantMessage" referenceName="messages" variableName="newMessage"/>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.MessageEnd" referenceName="ends" variableName="sendingEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="message" valueExpression="var:newMessage"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="context" valueExpression="ocl: if $source.oclIsTypeOf(Participant) then $source else if  $container.oclIsTypeOf(Execution) then $source.oclAsType(Execution).owner else null endif endif"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.MessageEnd" referenceName="ends" variableName="receivingEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="message" valueExpression="var:newMessage"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="context" valueExpression="ocl: if $source.oclIsTypeOf(Participant) then $source else if  $source.oclIsTypeOf(Execution) then $source.oclAsType(Execution).owner else null endif endif"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newMessage">
                  <subModelOperations xsi:type="tool:SetValue" featureName="sendingEnd" valueExpression="var:sendingEnd"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="receivingEnd" valueExpression="var:receivingEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move sendingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:sendingEnd"/>
                  <parameters name="predecessor" value="aql:startingEndPredecessor.semanticEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move receivingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:receivingEnd"/>
                  <parameters name="predecessor" value="aql:newMessage.sendingEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newMessage">
                  <subModelOperations xsi:type="tool:ExternalJavaActionCall" name="Adjust new call message position" action="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.6/@ownedTools[name='Reorder%20Executions%2C%20States%20Messages%2C%20InteractionUses']/@onEventMovedOperation/@firstModelOperations/@subModelOperations.2/@subModelOperations.2"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'m_destroy' + self.eContainerOrSelf(interactions::Interaction).messages->size()"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:sendingEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'send_'+ self.message.name"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:receivingEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'receive_' + self.message.name"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
          </ownedTools>
        </toolSections>
        <toolSections name="Interaction Use">
          <ownedTools xsi:type="tool_2:InteractionUseCreationTool" name="Interaction Use" containerMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@containerMappings[name='Interaction%20Use']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eContainerOrSelf(Interaction)">
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Show variables" id="org.eclipse.sirius.business.api.action.printVariables">
                  <parameters name="title" value="IU creation"/>
                  <parameters name="enabled" value="aql:false"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.InteractionUse" referenceName="interactionUses" variableName="newIU">
                  <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:'ref.' + self.eContainer().eContents()->filter(InteractionUse)->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="interaction" valueExpression="aql:self.eContainerOrSelf(Interaction)"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="coveredParticipants" valueExpression="var:coverage"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.InteractionUseEnd" referenceName="ends" variableName="startingEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'start_' + instance.name"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="owner" valueExpression="var:newIU"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.InteractionUseEnd" referenceName="ends" variableName="finishingEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'finish_' + instance.name"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="owner" valueExpression="var:newIU"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newIU">
                  <subModelOperations xsi:type="tool:SetValue" featureName="start" valueExpression="var:startingEnd"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="finish" valueExpression="var:finishingEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move finishingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:finishingEnd"/>
                  <parameters name="predecessor" value="aql:finishingEndPredecessor.semanticEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move startingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:startingEnd"/>
                  <parameters name="predecessor" value="aql:startingEndPredecessor.semanticEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newIU">
                  <subModelOperations xsi:type="tool:ExternalJavaActionCall" name="Adjust interaction use position" action="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.6/@ownedTools[name='Reorder%20Executions%2C%20States%20Messages%2C%20InteractionUses']/@onEventMovedOperation/@firstModelOperations/@subModelOperations.3/@subModelOperations.2"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
            <coveredLifelines name="coverage"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DirectEditLabel" name="Edit IU Label">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="var:arg0"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DeleteElementDescription" name="Delete Interaction Use">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.start">
                  <subModelOperations xsi:type="tool:RemoveElement"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.finish">
                  <subModelOperations xsi:type="tool:RemoveElement"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Combined Fragment">
          <ownedTools xsi:type="tool_2:CombinedFragmentCreationTool" name="Combined Fragment" containerMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@containerMappings[name='Combined%20Fragment']" extraMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@containerMappings[name='Combined%20Fragment']/@subContainerMappings[name='Operand']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eContainerOrSelf(Interaction)">
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Show variables" id="org.eclipse.sirius.business.api.action.printVariables">
                  <parameters name="title" value="CF creation"/>
                  <parameters name="enabled" value="aql:false"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.CombinedFragment" referenceName="combinedFragments" variableName="newCF">
                  <subModelOperations xsi:type="tool:SetValue" featureName="operator" valueExpression="aql:'alt.' + self.eContainer().eContents()->filter(interactions::CombinedFragment)->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="coveredParticipants" valueExpression="var:coverage"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.Operand" referenceName="ownedOperands" variableName="newOperand">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="condition1"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.CombinedFragmentEnd" referenceName="ends" variableName="startCF">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'start_' +newCF.operator"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="owner" valueExpression="var:newCF"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.CombinedFragmentEnd" referenceName="ends" variableName="finishCF">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'finish_' +newCF.operator"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="owner" valueExpression="var:newCF"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.OperandEnd" referenceName="ends" variableName="newOpEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'start_' + newOperand.name"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="owner" valueExpression="var:newOperand"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newCF">
                  <subModelOperations xsi:type="tool:SetValue" featureName="start" valueExpression="var:startCF"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="finish" valueExpression="var:finishCF"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newOperand">
                  <subModelOperations xsi:type="tool:SetValue" featureName="start" valueExpression="var:newOpEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move finishCF" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:finishCF"/>
                  <parameters name="predecessor" value="aql:finishingEndPredecessor.semanticEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move newOpEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:newOpEnd"/>
                  <parameters name="predecessor" value="aql:startingEndPredecessor.semanticEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move startCF" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:startCF"/>
                  <parameters name="predecessor" value="aql:startingEndPredecessor.semanticEnd"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
            <coveredLifelines name="coverage"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DirectEditLabel" name="Edit Combined Fragment">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool:SetValue" featureName="operator" valueExpression="var:arg0"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DeleteElementDescription" name="Delete Combined Fragment">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:element.deleteCombinedFragment()"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_2:OperandCreationTool" name="Operand" precondition="aql:source&lt;>null  and  target&lt;>null  and  sourceView&lt;>null  and  targetView&lt;>null startingEndPredecessor &lt;>null  and  finishingEndPredecessor &lt;>null " containerMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@containerMappings[name='Combined%20Fragment']/@subContainerMappings[name='Operand']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eContainerOrSelf(Interaction)">
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Show variables" id="org.eclipse.sirius.business.api.action.printVariables">
                  <parameters name="title" value="Operand Creation"/>
                  <parameters name="enabled" value="aql:false"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.eContainerOrSelf(interactions::CombinedFragment)">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.Operand" referenceName="ownedOperands" variableName="newOperand">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'condition.' + self.eContainer().ownedOperands->size()"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.OperandEnd" referenceName="ends" variableName="newOpEnd">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'start_' + newOperand.name"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="owner" valueExpression="var:newOperand"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newOperand">
                  <subModelOperations xsi:type="tool:SetValue" featureName="start" valueExpression="var:newOpEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move operand start end" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:newOpEnd"/>
                  <parameters name="predecessor" value="aql:startingEndPredecessor.semanticEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move operand" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="aql:newOperand.eContainer()"/>
                  <parameters name="referenceName" value="ownedOperands"/>
                  <parameters name="element" value="var:newOperand"/>
                  <parameters name="predecessor" value="aql:((newOperand.start.precedingSiblings()->reverse()->filter(interactions::OperandEnd)->asSet()->intersection(newOperand.eContainer().ownedOperands.start)->first())).owner"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
          </ownedTools>
          <subSections name="Operands">
            <ownedTools xsi:type="tool_1:DirectEditLabel" name="Edit Operand">
              <mask mask="{0}"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="var:arg0"/>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
            <ownedTools xsi:type="tool_1:DeleteElementDescription" name="Delete Operand">
              <element name="element"/>
              <elementView name="elementView"/>
              <containerView name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:element.deleteOperand()"/>
              </initialOperation>
            </ownedTools>
          </subSections>
        </toolSections>
        <toolSections name="States">
          <ownedTools xsi:type="tool_2:StateCreationTool" name="State" nodeMappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline']/@borderedNodeMappings[name='State']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Show variables" id="org.eclipse.sirius.business.api.action.printVariables">
                  <parameters name="title" value="Execution creation"/>
                  <parameters name="enabled" value="aql:false"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eContainerOrSelf(interactions::Interaction)">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.State" referenceName="states" variableName="newState">
                    <subModelOperations xsi:type="tool:SetValue" featureName="owner" valueExpression="ocl: if $container.oclIsTypeOf(Participant) then $container else if  $container.oclIsTypeOf(Execution) then $container.oclAsType(Execution).owner else null endif endif"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.StateEnd" referenceName="ends" variableName="startingEnd">
                    <subModelOperations xsi:type="tool:SetValue" featureName="state" valueExpression="var:newState"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="context" valueExpression="aql:newState.owner"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="interactions.StateEnd" referenceName="ends" variableName="finishingEnd">
                    <subModelOperations xsi:type="tool:SetValue" featureName="state" valueExpression="var:newState"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="context" valueExpression="aql:newState.owner"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newState">
                    <subModelOperations xsi:type="tool:SetValue" featureName="start" valueExpression="var:startingEnd"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="end" valueExpression="var:finishingEnd"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move finishingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="var:self"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="var:finishingEnd"/>
                    <parameters name="predecessor" value="aql:finishingEndPredecessor.semanticEnd"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move startingEnd" icon="" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="var:self"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="var:startingEnd"/>
                    <parameters name="predecessor" value="aql:startingEndPredecessor.semanticEnd"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newState">
                    <subModelOperations xsi:type="tool:ExternalJavaActionCall" name="Adjust new state position" action="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@toolSections.6/@ownedTools[name='Reorder%20Executions%2C%20States%20Messages%2C%20InteractionUses']/@onEventMovedOperation/@firstModelOperations/@subModelOperations.1/@subModelOperations.2"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="'s' + self.eContainerOrSelf(interactions::Interaction).states->size()"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:startingEnd">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'start_' +  self.state.name"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:finishingEnd">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'finish_' +  self.state.name"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DirectEditLabel" name="Edit State">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="var:arg0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DeleteElementDescription" name="Delete State">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.start">
                  <subModelOperations xsi:type="tool:If" conditionExpression="aql:not self.oclIsKindOf(interactions::MixEnd) or (self.oclIsKindOf(interactions::MixEnd) and self.message = null)">
                    <subModelOperations xsi:type="tool:RemoveElement"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.end">
                  <subModelOperations xsi:type="tool:If" conditionExpression="aql:not self.oclIsKindOf(interactions::MixEnd) or (self.oclIsKindOf(interactions::MixEnd) and self.message = null)">
                    <subModelOperations xsi:type="tool:RemoveElement"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Reorder Tool">
          <ownedTools xsi:type="tool_2:ReorderTool" name="Reorder Executions, States Messages, InteractionUses" mappings="//@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline']/@borderedNodeMappings[name='Execution'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline']/@borderedNodeMappings[name='State'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@edgeMappings[name='Call%20Message'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@containerMappings[name='Combined%20Fragment'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@containerMappings[name='Combined%20Fragment']/@subContainerMappings[name='Operand'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@edgeMappings[name='Create%20Participant%20Message'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@edgeMappings[name='Destroy%20Participant%20Message'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@edgeMappings[name='Feature%20Access%20Message'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@containerMappings[name='Interaction%20Use'] //@ownedViewpoints[name='Design']/@ownedRepresentations[name='Sequence%20Diagram']/@defaultLayer/@edgeMappings[name='Return%20Message']">
            <startingEndPredecessorAfter name="startingEndPredecessorAfter"/>
            <finishingEndPredecessorAfter name="finishingEndPredecessorAfter"/>
            <onEventMovedOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:self.oclIsKindOf(Execution)">
                  <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move start end" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="aql:self.eContainerOrSelf(Interaction)"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="aql:self.start"/>
                    <parameters name="predecessor" value="aql:startingEndPredecessorAfter.semanticEnd"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move finish end" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="aql:self.eContainerOrSelf(Interaction)"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="aql:self.end"/>
                    <parameters name="predecessor" value="aql:finishingEndPredecessorAfter.semanticEnd"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:ExternalJavaAction" name="Adjust execution position 2" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="aql:self.eContainerOrSelf(Interaction)"/>
                    <parameters name="referenceName" value="executions"/>
                    <parameters name="element" value="var:self"/>
                    <parameters name="predecessor" value="aql:self.start.precedingSiblings()->filter(interactions::ExecutionEnd)->select(current | current.execution.start = current)->last().execution"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:self.oclIsKindOf(State)">
                  <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move start end" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="aql:self.eContainerOrSelf(Interaction)"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="aql:self.start"/>
                    <parameters name="predecessor" value="aql:startingEndPredecessorAfter.semanticEnd"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move finish end" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="aql:self.eContainerOrSelf(Interaction)"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="aql:self.end"/>
                    <parameters name="predecessor" value="aql:finishingEndPredecessorAfter.semanticEnd"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:ExternalJavaAction" name="Adjust state position" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="aql:self.eContainerOrSelf(Interaction)"/>
                    <parameters name="referenceName" value="states"/>
                    <parameters name="element" value="var:self"/>
                    <parameters name="predecessor" value="aql:self.start.precedingSiblings()->filter(interactions::StateEnd)->select(current | current.state.start = current)->last().state"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:self.oclIsKindOf(Message)">
                  <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move sending end" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="aql:self.eContainerOrSelf(Interaction)"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="aql:self.sendingEnd"/>
                    <parameters name="predecessor" value="aql:startingEndPredecessorAfter.semanticEnd"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move receiving end" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="aql:self.eContainerOrSelf(Interaction)"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="aql:self.receivingEnd"/>
                    <parameters name="predecessor" value="aql:finishingEndPredecessorAfter.semanticEnd"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:ExternalJavaAction" name="Adjust message position 2" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="aql:self.eContainerOrSelf(Interaction)"/>
                    <parameters name="referenceName" value="messages"/>
                    <parameters name="element" value="var:self"/>
                    <parameters name="predecessor" value="aql:self.sendingEnd.precedingSiblings()->filter(interactions::MessageEnd)->select(current | current.message.receivingEnd = current)->last().message"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:self.oclIsKindOf(InteractionUse)">
                  <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move start end" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="aql:self.eContainerOrSelf(Interaction)"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="aql:self.start"/>
                    <parameters name="predecessor" value="aql:startingEndPredecessorAfter.semanticEnd"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move finish end" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="aql:self.eContainerOrSelf(Interaction)"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="aql:self.finish"/>
                    <parameters name="predecessor" value="aql:finishingEndPredecessorAfter.semanticEnd"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:ExternalJavaAction" name="Adjust Interaction Use position" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="aql:self.eContainerOrSelf(Interaction)"/>
                    <parameters name="referenceName" value="interactionUses"/>
                    <parameters name="element" value="var:self"/>
                    <parameters name="predecessor" value="aql:self.start.precedingSiblings()->filter(interactions::InteractionUseEnd)->select(current| current.owner.start = current)->last().owner"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:self.oclIsKindOf(CombinedFragment)">
                  <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move start end" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="aql:self.eContainerOrSelf(Interaction)"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="aql:self.start"/>
                    <parameters name="predecessor" value="aql:startingEndPredecessorAfter.semanticEnd"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move finish end" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="aql:self.eContainerOrSelf(Interaction)"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="aql:self.finish"/>
                    <parameters name="predecessor" value="aql:finishingEndPredecessorAfter.semanticEnd"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:ExternalJavaAction" name="Adjust CombinedFragment position" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="aql:self.eContainerOrSelf(Interaction)"/>
                    <parameters name="referenceName" value="combinedFragments"/>
                    <parameters name="element" value="var:self"/>
                    <parameters name="predecessor" value="aql:self.start.precedingSiblings()->filter(interactions::CombinedFragmentEnd)->select(current | current.owner.start = current)->last().owner"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:self.oclIsKindOf(Operand)">
                  <subModelOperations xsi:type="tool:ExternalJavaAction" name="Move start end" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="aql:self.eContainerOrSelf(Interaction)"/>
                    <parameters name="referenceName" value="ends"/>
                    <parameters name="element" value="aql:self.start"/>
                    <parameters name="predecessor" value="aql:startingEndPredecessorAfter.semanticEnd"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:ExternalJavaAction" name="Adjust Operand position" id="org.eclipse.sirius.business.api.action.moveElement">
                    <parameters name="referenceOwner" value="aql:self.eContainer(CombinedFragment)"/>
                    <parameters name="referenceName" value="ownedOperands"/>
                    <parameters name="element" value="var:self"/>
                    <parameters name="predecessor" value="aql:self.start.precedingSiblings()->filter(interactions::OperandEnd)->select(op | op.owner.start = op and self.eContainerOrSelf(interactions::CombinedFragment) = op.owner.eContainerOrSelf(interactions::CombinedFragment))->last().owner)"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </onEventMovedOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="org.eclipse.sirius.ecore.design.service.EcoreService"/>
    <ownedJavaExtensions qualifiedClassName="org.eclipse.sirius.ecore.design.service.EReferenceServices"/>
    <ownedJavaExtensions qualifiedClassName="org.eclipse.sirius.common.tools.api.interpreter.StandardServices"/>
  </ownedViewpoints>
  <userColorsPalettes name="Ecore Palette">
    <entries xsi:type="description:InterpolatedColor" name="Size Based Color" colorValueComputationExpression="aql:self.eContents()->size()"/>
    <entries xsi:type="description:UserFixedColor" red="250" green="190" blue="190" name="MomentIntervalColor"/>
    <entries xsi:type="description:UserFixedColor" red="250" green="240" blue="180" name="RoleColor"/>
    <entries xsi:type="description:UserFixedColor" red="180" green="230" blue="180" name="PartyPlaceThingColor"/>
    <entries xsi:type="description:UserFixedColor" red="180" green="200" blue="210" name="DescriptionColor"/>
    <entries xsi:type="description:UserFixedColor" red="255" green="245" blue="182" name="Package Color"/>
    <entries xsi:type="description:UserFixedColor" red="253" green="208" blue="142" name="External Package Color"/>
  </userColorsPalettes>
</description:Group>
